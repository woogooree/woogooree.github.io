{"componentChunkName":"component---src-templates-blog-template-js","path":"/Devops_01/","result":{"data":{"cur":{"id":"be5685f3-f54d-58a6-ab9b-5ed7658240ee","html":"<h2 id=\"데브옵스-기본-개념-이해\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EB%B8%8C%EC%98%B5%EC%8A%A4-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90-%EC%9D%B4%ED%95%B4\" aria-label=\"데브옵스 기본 개념 이해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데브옵스 기본 개념 이해</h2>\n<p>데브옵스(DevOps)는 개발(Development)과 운영(Operations)의 합성어로, 소프트웨어 개발과 IT 운영을 하나로 통합하는 방법론이다. 데브옵스의 목표는 소프트웨어 개발 주기를 단축하고 높은 품질의 소프트웨어를 빠르게 제공하는 것이다. 이를 위해 자동화, 지속적 통합/지속적 배포(CI/CD), 협업 도구 등을 활용한다.</p>\n<h2 id=\"데브옵스-엔지니어의-역할과-책임\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EB%B8%8C%EC%98%B5%EC%8A%A4-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4%EC%9D%98-%EC%97%AD%ED%95%A0%EA%B3%BC-%EC%B1%85%EC%9E%84\" aria-label=\"데브옵스 엔지니어의 역할과 책임 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데브옵스 엔지니어의 역할과 책임</h2>\n<h3 id=\"1-지속적-통합-및-지속적-배포cicd-파이프라인-구축-및-관리\" style=\"position:relative;\"><a href=\"#1-%EC%A7%80%EC%86%8D%EC%A0%81-%ED%86%B5%ED%95%A9-%EB%B0%8F-%EC%A7%80%EC%86%8D%EC%A0%81-%EB%B0%B0%ED%8F%ACcicd-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%EA%B5%AC%EC%B6%95-%EB%B0%8F-%EA%B4%80%EB%A6%AC\" aria-label=\"1 지속적 통합 및 지속적 배포cicd 파이프라인 구축 및 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 지속적 통합 및 지속적 배포(CI/CD) 파이프라인 구축 및 관리</h3>\n<p>데브옵스 엔지니어는 자동화된 빌드, 테스트, 배포 파이프라인을 설계하고 구현하여 소프트웨어 개발 주기를 단축시킨다. 이를 통해 코드 변경 사항이 신속하고 안전하게 배포될 수 있도록 한다.</p>\n<h3 id=\"2-인프라-관리-및-모니터링\" style=\"position:relative;\"><a href=\"#2-%EC%9D%B8%ED%94%84%EB%9D%BC-%EA%B4%80%EB%A6%AC-%EB%B0%8F-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81\" aria-label=\"2 인프라 관리 및 모니터링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 인프라 관리 및 모니터링</h3>\n<p>클라우드 서비스(AWS, Azure, GCP 등)를 이용해 인프라를 구축하고 관리한다. Infrastructure as Code(IaC) 도구(Terraform, CloudFormation 등)를 사용해 인프라를 코드로 관리하며, Prometheus, Grafana, ELK 스택 등을 활용해 시스템과 애플리케이션의 성능을 모니터링한다.</p>\n<h3 id=\"3-컨테이너화-및-오케스트레이션\" style=\"position:relative;\"><a href=\"#3-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%ED%99%94-%EB%B0%8F-%EC%98%A4%EC%BC%80%EC%8A%A4%ED%8A%B8%EB%A0%88%EC%9D%B4%EC%85%98\" aria-label=\"3 컨테이너화 및 오케스트레이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 컨테이너화 및 오케스트레이션</h3>\n<p>Docker를 사용해 애플리케이션을 컨테이너화하고, Kubernetes를 이용해 컨테이너화된 애플리케이션을 오케스트레이션한다. 이를 통해 애플리케이션의 이식성과 확장성을 높인다.</p>\n<h3 id=\"4-자동화-및-스크립팅\" style=\"position:relative;\"><a href=\"#4-%EC%9E%90%EB%8F%99%ED%99%94-%EB%B0%8F-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8C%85\" aria-label=\"4 자동화 및 스크립팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 자동화 및 스크립팅</h3>\n<p>반복적인 작업을 자동화하기 위해 스크립트를 작성하고, CI/CD 파이프라인, 인프라 관리, 모니터링 작업 등을 자동화한다. Python, Bash, Ruby 등의 스크립트 언어를 사용한다.</p>\n<h3 id=\"5-협업-및-커뮤니케이션\" style=\"position:relative;\"><a href=\"#5-%ED%98%91%EC%97%85-%EB%B0%8F-%EC%BB%A4%EB%AE%A4%EB%8B%88%EC%BC%80%EC%9D%B4%EC%85%98\" aria-label=\"5 협업 및 커뮤니케이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 협업 및 커뮤니케이션</h3>\n<p>개발팀, IT 운영팀과 긴밀하게 협력하여 원활한 소프트웨어 배포와 운영을 지원한다. GitHub, GitLab 등의 버전 관리 도구와 협업 도구를 사용해 코드 변경 사항을 관리하고, 팀 내 커뮤니케이션을 원활하게 한다.</p>\n<h3 id=\"6-보안-강화\" style=\"position:relative;\"><a href=\"#6-%EB%B3%B4%EC%95%88-%EA%B0%95%ED%99%94\" aria-label=\"6 보안 강화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 보안 강화</h3>\n<p>CI/CD 파이프라인과 인프라에 보안 조치를 구현하고, 보안 취약점을 식별 및 해결한다. 코드 스캔, 보안 테스트, 접근 제어 등 다양한 보안 방안을 적용해 시스템의 보안을 강화한다.</p>\n<h3 id=\"7-문제-해결-및-최적화\" style=\"position:relative;\"><a href=\"#7-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EB%B0%8F-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"7 문제 해결 및 최적화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 문제 해결 및 최적화</h3>\n<p>시스템 및 애플리케이션의 성능 문제를 분석하고 해결하며, 인프라와 배포 파이프라인을 최적화한다. 이를 통해 시스템의 안정성과 효율성을 높인다.</p>\n<h3 id=\"8-문서화\" style=\"position:relative;\"><a href=\"#8-%EB%AC%B8%EC%84%9C%ED%99%94\" aria-label=\"8 문서화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 문서화</h3>\n<p>구축한 시스템, 파이프라인, 인프라에 대한 문서를 작성하고 유지 관리한다. 이를 통해 팀원들이 시스템을 이해하고 사용할 수 있도록 돕는다.</p>\n<h2 id=\"도움-되는-공부들은\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%9B%80-%EB%90%98%EB%8A%94-%EA%B3%B5%EB%B6%80%EB%93%A4%EC%9D%80\" aria-label=\"도움 되는 공부들은 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도움 되는 공부들은?</h2>\n<h3 id=\"리눅스-및-시스템-관리\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%B0%8F-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B4%80%EB%A6%AC\" aria-label=\"리눅스 및 시스템 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리눅스 및 시스템 관리</h3>\n<p>데브옵스 엔지니어는 다양한 운영 체제를 다룰 수 있어야 하며, 특히 리눅스에 대한 이해가 필수적이다. 리눅스 명령어, 쉘 스크립트 작성, 시스템 모니터링 및 관리 도구 사용법을 익혀야 한다.</p>\n<h3 id=\"버전-관리-시스템\" style=\"position:relative;\"><a href=\"#%EB%B2%84%EC%A0%84-%EA%B4%80%EB%A6%AC-%EC%8B%9C%EC%8A%A4%ED%85%9C\" aria-label=\"버전 관리 시스템 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>버전 관리 시스템</h3>\n<p>Git과 같은 버전 관리 시스템(VCS)을 사용하는 방법을 배워야 한다. Git을 사용하면 코드 변경 내역을 추적하고, 협업할 때 코드 충돌을 관리할 수 있다. GitHub, GitLab 등의 플랫폼을 활용해 프로젝트를 관리하는 방법도 익혀야 한다.</p>\n<h3 id=\"cicd-파이프라인\" style=\"position:relative;\"><a href=\"#cicd-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8\" aria-label=\"cicd 파이프라인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI/CD 파이프라인</h3>\n<p>지속적 통합/지속적 배포(CI/CD) 파이프라인을 구축하는 방법을 배우는 것이 중요하다. Jenkins, Travis CI, CircleCI 등과 같은 도구를 사용해 자동화된 빌드, 테스트, 배포 파이프라인을 설정하고 관리하는 방법을 익혀야 한다.</p>\n<h3 id=\"클라우드-컴퓨팅\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%BB%B4%ED%93%A8%ED%8C%85\" aria-label=\"클라우드 컴퓨팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클라우드 컴퓨팅</h3>\n<p>AWS, Azure, GCP와 같은 클라우드 플랫폼에 대한 이해가 필요하다. 클라우드 서비스를 활용해 인프라를 구성하고 관리하는 방법을 익혀야 한다. 특히, Infrastructure as Code(IaC) 개념을 이해하고 Terraform, CloudFormation 등의 도구를 사용하는 것이 중요하다.</p>\n<h3 id=\"컨테이너와-오케스트레이션\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EC%99%80-%EC%98%A4%EC%BC%80%EC%8A%A4%ED%8A%B8%EB%A0%88%EC%9D%B4%EC%85%98\" aria-label=\"컨테이너와 오케스트레이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너와 오케스트레이션</h3>\n<p>Docker를 사용해 애플리케이션을 컨테이너화하는 방법을 배우고, Kubernetes를 사용해 컨테이너화된 애플리케이션을 오케스트레이션하는 방법을 익혀야 한다. 이러한 기술은 애플리케이션의 이식성과 확장성을 높이는 데 필수적이다.</p>\n<h3 id=\"모니터링-및-로깅\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81-%EB%B0%8F-%EB%A1%9C%EA%B9%85\" aria-label=\"모니터링 및 로깅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모니터링 및 로깅</h3>\n<p>시스템과 애플리케이션의 상태를 모니터링하고 로그를 분석하는 방법을 배워야 한다. Prometheus, Grafana, ELK 스택(Elasticsearch, Logstash, Kibana) 등의 도구를 사용해 모니터링 및 로깅 환경을 구축하는 방법을 익혀야 한다.</p>\n<h3 id=\"스크립트-및-프로그래밍-언어\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%B0%8F-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%96%B8%EC%96%B4\" aria-label=\"스크립트 및 프로그래밍 언어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스크립트 및 프로그래밍 언어</h3>\n<p>Python, Bash, Ruby 등의 스크립트 언어를 배우는 것이 좋다. 자동화 스크립트를 작성하거나, DevOps 도구를 확장 및 커스터마이징하는 데 유용하다.</p>\n<h3 id=\"네트워크-기본-지식\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B8%B0%EB%B3%B8-%EC%A7%80%EC%8B%9D\" aria-label=\"네트워크 기본 지식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 기본 지식</h3>\n<p>네트워크의 기본 개념, 프로토콜, 방화벽 설정 등을 이해해야 한다. 이는 애플리케이션의 배포와 운영 과정에서 네트워크 문제를 해결하는 데 도움이 된다.</p>\n<h2 id=\"내가-우선적으로-잘-알고-싶은-일은\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EA%B0%80-%EC%9A%B0%EC%84%A0%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%9E%98-%EC%95%8C%EA%B3%A0-%EC%8B%B6%EC%9D%80-%EC%9D%BC%EC%9D%80\" aria-label=\"내가 우선적으로 잘 알고 싶은 일은 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내가 우선적으로 잘 알고 싶은 일은?</h2>\n<ul>\n<li>가장 많이 접하게 될 개발환경에 익숙해지기</li>\n<li>문서화 / 자동화를 위한 솔루션 구축</li>\n<li>에자일 및 스크럼 방식으로 일하는법</li>\n<li>닷넷 기반 작업물을 Azure 클라우드로 서비스 하는법</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%8D%B0%EB%B8%8C%EC%98%B5%EC%8A%A4-%EA%B8%B0%EB%B3%B8-%EA%B0%9C%EB%85%90-%EC%9D%B4%ED%95%B4\">데브옵스 기본 개념 이해</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8D%B0%EB%B8%8C%EC%98%B5%EC%8A%A4-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4%EC%9D%98-%EC%97%AD%ED%95%A0%EA%B3%BC-%EC%B1%85%EC%9E%84\">데브옵스 엔지니어의 역할과 책임</a></p>\n<ul>\n<li><a href=\"#1-%EC%A7%80%EC%86%8D%EC%A0%81-%ED%86%B5%ED%95%A9-%EB%B0%8F-%EC%A7%80%EC%86%8D%EC%A0%81-%EB%B0%B0%ED%8F%ACcicd-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8-%EA%B5%AC%EC%B6%95-%EB%B0%8F-%EA%B4%80%EB%A6%AC\">1. 지속적 통합 및 지속적 배포(CI/CD) 파이프라인 구축 및 관리</a></li>\n<li><a href=\"#2-%EC%9D%B8%ED%94%84%EB%9D%BC-%EA%B4%80%EB%A6%AC-%EB%B0%8F-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81\">2. 인프라 관리 및 모니터링</a></li>\n<li><a href=\"#3-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%ED%99%94-%EB%B0%8F-%EC%98%A4%EC%BC%80%EC%8A%A4%ED%8A%B8%EB%A0%88%EC%9D%B4%EC%85%98\">3. 컨테이너화 및 오케스트레이션</a></li>\n<li><a href=\"#4-%EC%9E%90%EB%8F%99%ED%99%94-%EB%B0%8F-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8C%85\">4. 자동화 및 스크립팅</a></li>\n<li><a href=\"#5-%ED%98%91%EC%97%85-%EB%B0%8F-%EC%BB%A4%EB%AE%A4%EB%8B%88%EC%BC%80%EC%9D%B4%EC%85%98\">5. 협업 및 커뮤니케이션</a></li>\n<li><a href=\"#6-%EB%B3%B4%EC%95%88-%EA%B0%95%ED%99%94\">6. 보안 강화</a></li>\n<li><a href=\"#7-%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EB%B0%8F-%EC%B5%9C%EC%A0%81%ED%99%94\">7. 문제 해결 및 최적화</a></li>\n<li><a href=\"#8-%EB%AC%B8%EC%84%9C%ED%99%94\">8. 문서화</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%8F%84%EC%9B%80-%EB%90%98%EB%8A%94-%EA%B3%B5%EB%B6%80%EB%93%A4%EC%9D%80\">도움 되는 공부들은?</a></p>\n<ul>\n<li><a href=\"#%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%B0%8F-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B4%80%EB%A6%AC\">리눅스 및 시스템 관리</a></li>\n<li><a href=\"#%EB%B2%84%EC%A0%84-%EA%B4%80%EB%A6%AC-%EC%8B%9C%EC%8A%A4%ED%85%9C\">버전 관리 시스템</a></li>\n<li><a href=\"#cicd-%ED%8C%8C%EC%9D%B4%ED%94%84%EB%9D%BC%EC%9D%B8\">CI/CD 파이프라인</a></li>\n<li><a href=\"#%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%BB%B4%ED%93%A8%ED%8C%85\">클라우드 컴퓨팅</a></li>\n<li><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EC%99%80-%EC%98%A4%EC%BC%80%EC%8A%A4%ED%8A%B8%EB%A0%88%EC%9D%B4%EC%85%98\">컨테이너와 오케스트레이션</a></li>\n<li><a href=\"#%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81-%EB%B0%8F-%EB%A1%9C%EA%B9%85\">모니터링 및 로깅</a></li>\n<li><a href=\"#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%B0%8F-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%96%B8%EC%96%B4\">스크립트 및 프로그래밍 언어</a></li>\n<li><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B8%B0%EB%B3%B8-%EC%A7%80%EC%8B%9D\">네트워크 기본 지식</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%82%B4%EA%B0%80-%EC%9A%B0%EC%84%A0%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%9E%98-%EC%95%8C%EA%B3%A0-%EC%8B%B6%EC%9D%80-%EC%9D%BC%EC%9D%80\">내가 우선적으로 잘 알고 싶은 일은?</a></p>\n</li>\n</ul>\n</div>","excerpt":"데브옵스 기본 개념 이해 데브옵스(DevOps)는 개발(Development)과 운영(Operations)의 합성어로, 소프트웨어 개발과 IT 운영을 하나로 통합하는 방법론이다. 데브옵스의 목표는 소프트웨어 개발 주기를 단축하고 높은 품질의 소프트웨어를 빠르게 제공하는 것이다. 이를 위해 자동화, 지속적 통합/지속적 배포(CI/CD), 협업 도구 등을 활용한다. 데브옵스 엔지니어의 역할과 책임 1. 지속적 통합 및 지속적 배포(CI/CD) 파이프라인 구축 및 관리 데브옵스 엔지니어는 자동화된 빌드, 테스트, 배포 파이프라인을 설계하고 구현하여 소프트웨어 개발 주기를 단축시킨다. 이를 통해 코드 변경 사항이 신속하고 안전하게 배포될 수 있도록 한다. 2. 인프라 관리 및 모니터링 클라우드 서비스(AWS, Azure, GCP 등)를 이용해 인프라를 구축하고 관리한다. Infrastructure as Code(IaC) 도구(Terraform, CloudFormation 등)를 사용해 인…","frontmatter":{"date":"June 04, 2024","title":"데브옵스는 무슨 일을 하는가?","categories":"Cloud","author":"심우진","emoji":"🚀"},"fields":{"slug":"/Devops_01/"}},"next":{"id":"cc381e79-cf58-5d2b-960f-c8c27c3e4998","html":"<h2 id=\"형변환\" style=\"position:relative;\"><a href=\"#%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>형변환</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">int i = 10;\ndouble b = i; // 컴파일러가 자동으로 암시적 변환 (더 큰 자료형)\n\ndouble d = 10.5;\nint i = (int)d; // 명시적 형 변환 (자료구조가 같은 형태만)\n</code></pre></div>\n<h2 id=\"박싱과-언박싱\" style=\"position:relative;\"><a href=\"#%EB%B0%95%EC%8B%B1%EA%B3%BC-%EC%96%B8%EB%B0%95%EC%8B%B1\" aria-label=\"박싱과 언박싱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>박싱과 언박싱</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">// Boxing (값 형식을 참조 형식으로 변환)\nobject obj = 123;\n\n// Unboxing (참조 형식을 값 형식으로 변환)\nint i = (int)obj;\n\n// 박싱은 값 형식을 참조 형식으로 변환하느라 메모리 할당 및 복사가 일어나서 성능에 부담을 주게 되므로 자주 사용하지 않음</code></pre></div>\n<h2 id=\"as-operator-참조-형식을-다른-참조형식으로-변환-실패시-null-반환\" style=\"position:relative;\"><a href=\"#as-operator-%EC%B0%B8%EC%A1%B0-%ED%98%95%EC%8B%9D%EC%9D%84-%EB%8B%A4%EB%A5%B8-%EC%B0%B8%EC%A1%B0%ED%98%95%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98-%EC%8B%A4%ED%8C%A8%EC%8B%9C-null-%EB%B0%98%ED%99%98\" aria-label=\"as operator 참조 형식을 다른 참조형식으로 변환 실패시 null 반환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>as operator (참조 형식을 다른 참조형식으로 변환, 실패시 null 반환)</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">\nvoid BoxingUnboxing(object obj)\n{\n\tButton? button = obj as Button; // as Button 형태인 경우에만 button에 저장하고 아닐 경우 null 값을 저장하기 때문에 Button? 자료형로 선언함\n\tif (button != null)\n\t{\n\t\tConsole.WriteLine(button.GetString());\n\t}\n\telse\n\t{\n\t\tConsole.WriteLine(&quot;button is null&quot;);\n\t}\n\t\n}\n\nBoxingUnboxing(new Button()); // 이렇게 버튼 형으로 언박싱하면 button으로 취급되고 하지 않으면 null로 적용됨\n\n</code></pre></div>\n<h2 id=\"convert-데이터-타입-변환\" style=\"position:relative;\"><a href=\"#convert-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98\" aria-label=\"convert 데이터 타입 변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Convert (데이터 타입 변환)</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">string s = &quot;10.5&quot;;\ndouble d = Convert.ToDouble(s); // Convert를 사용하면 형태가 다른 자료형도 변환이 가능하다.\n\ndouble d2 = double.Parse(s); // Parse 를 사용해도 같다.\n\n// 유효성을 체크한 후 넘기고 싶다면 try.Parse 사용\ndouble.tryParse(s, out double d);\nint.tryParse(s, out int i); //10.5 는 int 형식이 아니기에 0이 반환됨\n\nif (int.tryParse(s, out int i))\n{\n\tconsole.WriteLine(&quot;변환성공&quot;)\n} \nelse\n{\n\tconsole.WriteLine(&quot;변환실패&quot;) // 실패한 것으로 취급하고 이게 출력됨\n}</code></pre></div>\n<h2 id=\"배열-형변환\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"배열 형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 형변환</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">class Animal\n{\n\tpublic string Name { get; set; } = default;\n}\n\nclass Cat : Animal { }\nclass Dog : Animal { }\nclass Pig : Animal { }\nclass Tiger : Animal { }\n\nList&lt;Animal&gt; animals = new()\n{\n\tnew Cat {Name = &quot;냐옹이1&quot;},\n\tnew Cat {Name = &quot;냐옹이2&quot;},\n\tnew Cat {Name = &quot;냐옹이3&quot;},\n};\n\n// Cast\nList&lt;Cat&gt; cats = animals.Cast&lt;Cat&gt;().ToList(); // Cat이 아닌 형태가 있으면 오류가 남\n\n// ofType : 리스트에 Cat, Dog 등 섞여 있을 때 Cat 만 추출함\nList&lt;Cat&gt; cats = animals.ofType&lt;Cat&gt;().ToList();\n\nforeach (Cat cat in cats)\n{\n\tConsole.WriteLine(cat.Name);\n}</code></pre></div>\n<h2 id=\"데이터-타입\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\" aria-label=\"데이터 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 타입</h2>\n<p>int == System.Int32\nstring == System.String\nbool == System.Boolean</p>\n<p>object : C# 모든 데이터 타입의 최상위 기본 클래스, 박싱/언박싱 가능</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">//명시적 변수 선언\nint n = 123; //초기화\nstring name;\nfloat s;\n\n//암시적 변수 선언(초기화 필수)\nvar number = 123;\nvar name = &quot;홍길동&quot;;\nvar c = &#39;가&#39;;\nvar score = 10.5; // double로 가변됨</code></pre></div>\n<h2 id=\"리터럴\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"리터럴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴</h2>\n<p>소스 코드에서 값을 나타내는 고정된 값\n컴파일 시간에 값을 결정함\n실행 시간에 변경 되지 않음</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">int x = 10; // 10은 정수형 리터럴\n\n//리터럴이 아닌 것은?\nint z = x * y; // x와 y가 아직 안정해졌으므로 리터럴이 아님\nstring? str = Console.ReadLine(); // 입력값 받기\nConsole.WriteLine(11d.GetType()); // 아직 안정해져서 리터럴이 아님\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">// 숫자형 접미사\nvar longValue = 10f; // 자료형을 알려주는 접미사 </code></pre></div>\n<h2 id=\"스택-메모리\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%83%9D-%EB%A9%94%EB%AA%A8%EB%A6%AC\" aria-label=\"스택 메모리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스택 메모리</h2>\n<p>스택 메모리는 함수 호출과 관련된 변수, 지역 볓수 및 매게변수를 저장하는 데 사용됨 (후입선출 방식으로 관리됨, 메모리 할당과 해제가 자동이며 매우 빠름)</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">void MyMethod()\n{\n\tint i = 123; // 4바이트 스택 메모리 할당\n}</code></pre></div>\n<h2 id=\"힙-메모리\" style=\"position:relative;\"><a href=\"#%ED%9E%99-%EB%A9%94%EB%AA%A8%EB%A6%AC\" aria-label=\"힙 메모리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>힙 메모리</h2>\n<p>프로그램 실행 도중 동적으로 할당되고 해제되는 변수와 데이터를 저장하는 데 사용됨 (메모리 할당과 해제를 명시적으로 프로그래머가 수행해야하지만 C#에서는 GC가 자동으로 처리함)</p>\n<p>클래스, 인터페이스, 배열, 대리자, 객체, 문자열 등이 C# 참조 형식임</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">var p1 = new Person() { name = &quot;홍&quot; }\nvar p2 = new person() { name = &quot;김&quot; }</code></pre></div>\n<h2 id=\"index-찾기\" style=\"position:relative;\"><a href=\"#index-%EC%B0%BE%EA%B8%B0\" aria-label=\"index 찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Index 찾기</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">string str = &quot;Hi, Good Morning&quot;;\n\n//IndexOf : 어디 있는지 찾아줌\nint i = str.IndexOf(&quot;Good&quot;) // 찾지 못하면 -1 반환\nint i_ = str.LastIndexOf(&quot;Good&quot;) // 뒤에서부터 찾음\n\n//StartsWith &amp; EndsWith : 지정된 걸로 시작/끝 나는지 확인\nbool result = str.StartsWith(&quot;Hi&quot;);\nbool result_ = strEndsWith(&quot;Hi&quot;); // False\n\n//Contains : 존재하는지 알려줌\nbool result = str.Contains(&quot;Morning&quot;); //True\nbool reseult_ = str.Contains(&quot;morning&quot;); //False\n\n// 지정된 문자열을 찾아 다른 문자열을 변환\nstring result = str.Replace(&quot;Morning&quot;, &quot;evening&quot;)</code></pre></div>\n<p>(출처) 유튜브 - 까불이코더 님</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%98%95%EB%B3%80%ED%99%98\">형변환</a></li>\n<li><a href=\"#%EB%B0%95%EC%8B%B1%EA%B3%BC-%EC%96%B8%EB%B0%95%EC%8B%B1\">박싱과 언박싱</a></li>\n<li><a href=\"#as-operator-%EC%B0%B8%EC%A1%B0-%ED%98%95%EC%8B%9D%EC%9D%84-%EB%8B%A4%EB%A5%B8-%EC%B0%B8%EC%A1%B0%ED%98%95%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98-%EC%8B%A4%ED%8C%A8%EC%8B%9C-null-%EB%B0%98%ED%99%98\">as operator (참조 형식을 다른 참조형식으로 변환, 실패시 null 반환)</a></li>\n<li><a href=\"#convert-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98\">Convert (데이터 타입 변환)</a></li>\n<li><a href=\"#%EB%B0%B0%EC%97%B4-%ED%98%95%EB%B3%80%ED%99%98\">배열 형변환</a></li>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\">데이터 타입</a></li>\n<li><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4\">리터럴</a></li>\n<li><a href=\"#%EC%8A%A4%ED%83%9D-%EB%A9%94%EB%AA%A8%EB%A6%AC\">스택 메모리</a></li>\n<li><a href=\"#%ED%9E%99-%EB%A9%94%EB%AA%A8%EB%A6%AC\">힙 메모리</a></li>\n<li><a href=\"#index-%EC%B0%BE%EA%B8%B0\">Index 찾기</a></li>\n</ul>\n</div>","frontmatter":{"date":"June 03, 2024","title":"C# 데이터타입과 형변환","categories":"기초공부","author":"심우진","emoji":"💡"},"fields":{"slug":"/csharp_01/"}},"prev":{"id":"ac0a7476-c315-5107-aba8-b402a5dba9a9","html":"<h2 id=\"배열-인덱싱-연산자\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EC%9D%B8%EB%8D%B1%EC%8B%B1-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"배열 인덱싱 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 인덱싱 ‘^연산자’</h2>\n<p>8.0 버전부터 사용할 수 있게 된 ^ 연산자를 이용해서 뒤에서부터 접근할 수 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">public ArraySlice()\n{\n\tvar list = new List&lt;string&gt;() {&quot;apple&quot;, &quot;banana&quot;};\n\n\tstring result = list[^2]; // 뒤에서 2 번째 인덱스를 구하라\n\n\tConsole.WriteLine($&quot;result: {result}&quot;);\n\t/*\n\t\t==&gt; string result = list[list.conut - 2];\n\t*/\n}</code></pre></div>\n<h2 id=\"linq를-이용하여-배열-자르기\" style=\"position:relative;\"><a href=\"#linq%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B0%B0%EC%97%B4-%EC%9E%90%EB%A5%B4%EA%B8%B0\" aria-label=\"linq를 이용하여 배열 자르기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linq를 이용하여 배열 자르기</h2>\n<p>Skip 과 Take 를 통해 가져오는 방식을 사용하면 배열의 Range 를 넘어선 요소를 선택하게 되더라도\n오류가 발생하지 않는 구조적 차이가 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">public ArraySlice()\n{\n\tvar list = new List&lt;string&gt;() {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;};\n\n\tIEnumerable&lt;string&gt; skip = list.Skip(2); // 앞 2개 건너뛰기\n\tIEnumerable&lt;string&gt; take = list.Take(2); // 앞 2개 가져오기\n\tIEnumerable&lt;string&gt; skipAndTake = list.Skip(2).Take(2); // 앞 2개 건너뛰고 3번째부터 2개 가져오기\n\tList&lt;string&gt; getRange = list.GetRange(2, 2); // SkipAndTake와 똑같이 동작하지만 배열 범위를 넘으면 오류가 발생함\n}</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%B0%B0%EC%97%B4-%EC%9D%B8%EB%8D%B1%EC%8B%B1-%EC%97%B0%EC%82%B0%EC%9E%90\">배열 인덱싱 ‘^연산자’</a></li>\n<li><a href=\"#linq%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B0%B0%EC%97%B4-%EC%9E%90%EB%A5%B4%EA%B8%B0\">Linq를 이용하여 배열 자르기</a></li>\n</ul>\n</div>","frontmatter":{"date":"June 04, 2024","title":"C# 배열 인덱싱","categories":"기초공부","author":"심우진","emoji":"💡"},"fields":{"slug":"/csharp_02/"}},"site":{"siteMetadata":{"siteUrl":"https://woogooree.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/Devops_01/","nextSlug":"/csharp_01/","prevSlug":"/csharp_02/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}