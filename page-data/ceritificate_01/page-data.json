{"componentChunkName":"component---src-templates-blog-template-js","path":"/ceritificate_01/","result":{"data":{"cur":{"id":"d1d15723-9c58-5ab2-93e2-0a7e9310f4fe","html":"<h2 id=\"소프트웨어-개발방법론\" style=\"position:relative;\"><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0\" aria-label=\"소프트웨어 개발방법론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소프트웨어 개발방법론</h2>\n<ul>\n<li>구조적 방법론 : 전체 시스템을 기능에 따라 나누어 개발하고, 이를 통합함(하향식) 나씨-슈나이더만 차트 사용(도형식, 제어 논리 구조, 명확한 식별)</li>\n<li>정보공학 방법론 : 기업의 정보시스템을 구축하기 위한 계획(ISP), 분석, 설계 등의 전과정을 형상화</li>\n<li>객체지향 방법론 : 현실 세계의 개체(Entity)를 속성과 메소드가 결합된 형태의 객체로 표현</li>\n<li>컴포넌트 기반 방법론(CBD) : 컴포넌트를 조립해 하나의 새로운 응용 프로그램 작성</li>\n<li>애자일 방법론 : 절차보다는 사람이 중심, 변화에 유연하고 신속하게 적응하면서 효율적으로 시스템 개발</li>\n<li>제품계열 방법론 : 특정 제품에 적용하고 싶은 공통된 기능을 정의해 개발, 임베디드에 유용</li>\n</ul>\n<h2 id=\"애자일\" style=\"position:relative;\"><a href=\"#%EC%95%A0%EC%9E%90%EC%9D%BC\" aria-label=\"애자일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>애자일</h2>\n<ul>\n<li>XP : 의사소통 개선과 즉각적 피드백\n<ul>\n<li>\n<p>5가지 가치 : 용기, 단순성, 의사소통, 존중, 피드백</p>\n</li>\n<li>\n<p>의사(소통)선생님 피(드백)존(중) 용기에 담(순성)아주세요 by 홍달쌤</p>\n</li>\n<li>\n<p>12가지 기본 원리</p>\n<ul>\n<li>짝 프로그래밍(Pair Programming) : 개발자 둘이서 같이하면 혼자와 같거나 적은 비용이 듬</li>\n<li>공동 코드 소유(Collective Ownership) : 공동 소유로 변경시 지연감소 효과</li>\n<li>지속적인 통합(Continuous Integration) : 매일 여러 번씩 통합, 빌드 해야함</li>\n<li>계획 세우기(Planning Process) : 개발자가 필요한 것은 무엇이며 어떤 부분에서 지연될 수 있는지를 알려줘야함</li>\n<li>작은 릴리즈(Small Release) : 작은 시스템 먼저 만들고 짧은 단위로 업데이트</li>\n<li>메타포어(Metathor) : 공통적인 이름 체계와 시스템 서술서를 통해 고객과 개발자간의 의사소통을 원활하게</li>\n<li>간단한 디자인(Simple Design): 요구사항에 적합한 가장 단순한 시스템 설계</li>\n<li>테스트 기반 개발(Test Driven Develop) : 테스트를 먼저하면서 개발하면 이미 테스트에서 요구사항을 충족</li>\n<li>리팩토링(Refactoring) : 프로그램의 기능은 바꾸지 않고 중복제거, 단순화 등을 위해 시스템 재구성</li>\n<li>주 40시간 작업 : 피곤한 개발자는 실수가 많아짐</li>\n<li>고객 상주(On Site Customer) : 의사소통 향상 및 문서의 양 감소</li>\n<li>코드 표준(Coding Standard) : 효과적인 공동 작업을 위해 코딩 표준을 정의</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>SCRUM : 매일 정해진 시간, 장소에서 짧은 시간의 개발\n<ul>\n<li>백로그(Backlog) : 제품과 프로젝트에 대한 요구사항</li>\n<li>스프린트(Sprint) : 2~4주의 짧은 개발 기간을 반복함</li>\n<li>스크럼 미팅(Scrum Meeting) : 매일 15분 정도 미팅</li>\n<li>스크럼 마스터(Scrum Master) : 프로젝트 리더</li>\n<li>스프린트 회고(Sprint Retrospective) : 스프린트 주기를 되돌아보며 규칙 준수 여부와 개선점 확인</li>\n<li>번 다운 차트(Burn Down Chart) : 해당 스프린트가 계획된 대로 나아가고 있는지, 또는 정해진 목표를 달성하기 위해 팀 차원에서 조정이 필요한지 나타냄</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"비용산정-모형\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%9A%A9%EC%82%B0%EC%A0%95-%EB%AA%A8%ED%98%95\" aria-label=\"비용산정 모형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비용산정 모형</h2>\n<ul>\n<li>하향식\n<ul>\n<li>델파이 기법 : 전문가의 경험적 지식을 통한 문제 해결 및 미래예측을 위한 기법</li>\n</ul>\n</li>\n<li>상향식\n<ul>\n<li>LoC(Lind of Code) : 원시 코드 라인 수의 낙관치, 중간치, 비관치를 측정해 예측치를 구함</li>\n<li>Man Month : 한 사람이 1개월 동안 할 수 있는 일의 양을 기준\n<ul>\n<li>= (LoC / 프로그래머 월간 생산성) / 프로젝트 인력</li>\n</ul>\n</li>\n<li>COCOMO : 보헴이 제안, 프로그램 규모에 따른 비용 산정\n<ul>\n<li>조직형(Organic Mode) : 5만 라인 이하</li>\n<li>반 분리형(Semi-Detached Mode) : 30만 라인 이하</li>\n<li>임베디드형(Embedded Mode) : 30만 라인 이상</li>\n</ul>\n</li>\n<li>Putnam : 개발주기의 단계별로 요구할 인력의 분포를 가정하는 방식, 생명주기 예측 모형, Rayleigh-Norden 곡선</li>\n<li>기능점수(FP) : 요구 기능에 따른 가중치를 부여함</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"일정관리-모델\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EC%A0%95%EA%B4%80%EB%A6%AC-%EB%AA%A8%EB%8D%B8\" aria-label=\"일정관리 모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일정관리 모델</h2>\n<ul>\n<li>주 공정법(CPM) : 여러 작업의 수행 순서가 얽혀 있는 프로젝트의 일정 계산(임계 경로는 가장 오래 걸리는 경로)</li>\n<li>PERT : 일의 순서를 계획적으로 정리하기 위한 수렴 기법, 비관치, 중간치, 낙관치의 3점 추정방식 이용</li>\n<li>주 공정 연쇄법(CCPM) : 자원제약사항을 고려해 일정 작성</li>\n</ul>\n<h2 id=\"소프트웨어-아키텍처\" style=\"position:relative;\"><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98\" aria-label=\"소프트웨어 아키텍처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소프트웨어 아키텍처</h2>\n<p>여러 가지 소프트웨어 구성요소와 그 구성요소가 가진 특성 중 외부에 드러나는 특성, 그리고 구성요소 간의 관계를 표현하는 시스템의 구조나 구조체</p>\n<h4 id=\"소프트웨어-아키텍처-패턴-유형\" style=\"position:relative;\"><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%ED%8C%A8%ED%84%B4-%EC%9C%A0%ED%98%95\" aria-label=\"소프트웨어 아키텍처 패턴 유형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소프트웨어 아키텍처 패턴 유형</h4>\n<ul>\n<li>계층화 패턴 : 서로 마주 보는 두 개의 계층 사이에서만 상호작용</li>\n<li>클라이언트-서버 패턴 : 하나의 서버와 다수의 클라이언트</li>\n<li>파이프-필터 패턴 : 데이터 스트림을 생성하고 처리하는 시스템에서 사용</li>\n<li>브로커패턴 : 분리된 컴포넌트들로 이루어진 분산 시스템에서 사용되고, 원격 서비스 실행을 통해 상호작용이 가능</li>\n<li>MVC패턴 : Model(핵심 기능, 데이터 보관) + View(유저인터페이스) + Controller(요청입력 처리)</li>\n</ul>\n<h4 id=\"소프트웨어-아키텍처-비용-평가-모델-종류\" style=\"position:relative;\"><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EB%B9%84%EC%9A%A9-%ED%8F%89%EA%B0%80-%EB%AA%A8%EB%8D%B8-%EC%A2%85%EB%A5%98\" aria-label=\"소프트웨어 아키텍처 비용 평가 모델 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소프트웨어 아키텍처 비용 평가 모델 종류</h4>\n<ul>\n<li>SAAM : 변경 용이성, 기능성에 집중</li>\n<li>ATAM : 아키텍처 품질 속성을 만족시키는지 판단</li>\n<li>CBAM : 경제적 의사결정에 대한 요구를 충족하는지 판단</li>\n<li>ADR : 응집도 평가 모델</li>\n<li>ARID : 특정 부분 품질 요소</li>\n</ul>\n<h2 id=\"디자인-패턴-중요-영문명도-다-외울-것\" style=\"position:relative;\"><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4-%EC%A4%91%EC%9A%94-%EC%98%81%EB%AC%B8%EB%AA%85%EB%8F%84-%EB%8B%A4-%EC%99%B8%EC%9A%B8-%EA%B2%83\" aria-label=\"디자인 패턴 중요 영문명도 다 외울 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디자인 패턴 (중요, 영문명도 다 외울 것)</h2>\n<p>SW설계에서 공통으로 발생하는 문제에 대해 자주 쓰이는 설계 방법을 정리한 패턴</p>\n<h4 id=\"생성-bprofas\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1-bprofas\" aria-label=\"생성 bprofas permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성 (bprofas)</h4>\n<ul>\n<li>builder : 복잡한 인스턴스를 조립해 만드는 구조</li>\n<li>prototype : 처음에 원형을 만들어 놓고, 복사한 후 필요한 부분만 수정해 사용함</li>\n<li>factory method : 상위 클래스에서 인터페이스 정의, 하위클래스에서 인스턴스 생성</li>\n<li>abstract factory : 서로 연관되거나 의존적인 객체들의 조합을 만드는 인터페이스를 제공</li>\n<li>singleton : 전역 변수 사용하지 않고 객체 하나만 생성, 그 객체는 어디서든지 참조가능</li>\n</ul>\n<h4 id=\"구조-abcdffp\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%A1%B0-abcdffp\" aria-label=\"구조 abcdffp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구조 (abcdffp)</h4>\n<ul>\n<li>adapter : 기존에 생성된 클래스를 재사용하도록 중간부 구현</li>\n<li>bridge : 기능 계층과 구현 계층을 연결, 구현부에서 추상 계층 분리</li>\n<li>composite : 객체들의 관계를 트리 구조로 구성</li>\n<li>decorator : 기존에 구현되어 있는 클래스에 필요한 기능을 꾸며나감</li>\n<li>facade : 복잡한 시스템에 대해 단순한 인터페이스 제공, 시스템 구조에 대한 파악 쉽게함</li>\n<li>flyweight : 메모리 절약, 클래스의 경량화가 목적</li>\n<li>proxy : 실체 객체에 대한 대리 객체</li>\n</ul>\n<h4 id=\"행위나머지\" style=\"position:relative;\"><a href=\"#%ED%96%89%EC%9C%84%EB%82%98%EB%A8%B8%EC%A7%80\" aria-label=\"행위나머지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>행위(나머지)</h4>\n<ul>\n<li>Mediator : 수많은 객체들 간의 복잡한 상호작용(Interface)을 캡슐화하여 객체로 정의하는 패턴, 중재자라는 뜻임</li>\n<li>Interpreter : 언어의 문법 표현을 정의함, SQL이나 통신 프로토콜과 같은 것을 개발할 때 사용</li>\n<li>Iterator : 자료 구조와 같이 접근이 잦은 객체에 대해 동일한 인터페이스를 사용하도록 하는 패턴, 내부 표현 방법의 노출 없이 순차적인 접근이 가능</li>\n<li>Template Method : 상위 클래스-추상, 하위 클래스-구체</li>\n<li>Observer : 한 객체의 상태가 바뀌면 그 객체에 의존하는 다른 객체들에 연락</li>\n<li>State : 상태에 따라 다르게 처리할 수 있도록 행위 내용 변경</li>\n<li>Visitor : 클래스의 메서드가 각 클래스를 돌아다니며 특정 작업 수행</li>\n<li>Command : 요청을 객체의 형태로 캡슐화하여 재이용하거나 취소할 수 있도록 요청에 필요한 정보를 저장하거나 로그에 남기는 패턴</li>\n<li>Strategy : 동일한 계열의 알고리즘들을 개별적으로 캡슐화하여 상호 교환할 수 있게 정의하는 패턴</li>\n<li>Memento : 특정 시점에서의 객체 내부 상태를 객체화함, Undo(작업취소)나 컨트롤+Z 기능 개발에 사용</li>\n<li>Chain of Responsibility : 요청을 처리할 수 있는 객체가 둘 이상 존재하여 한 객체가 처리하지 못하면 다음 객체로 넘어가는 형태의 패턴</li>\n</ul>\n<h2 id=\"운영체제\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C\" aria-label=\"운영체제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운영체제</h2>\n<p>컴퓨터 사용자와 컴퓨터 하드웨어 간의 인터페이스 담당</p>\n<p>-Windows : 중/소규모 서버, 일반 PC, 세계최대 점유율</p>\n<ul>\n<li>UNIX : 벨연구소에서 개발, 대용량 처리, 엔터프라이즈 급 서버</li>\n<li>Linux : 중/대규모 서버 대상, 높은 보안성, 비용 가장 적음</li>\n<li>Android : 리눅스 위에서 구동, 자바와 코틀린으로 작성</li>\n<li>IOS : 높은 보안성, 고성능</li>\n</ul>\n<h4 id=\"운영체제-현행-시스템-분석-고려사항\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C-%ED%98%84%ED%96%89-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%B6%84%EC%84%9D-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD\" aria-label=\"운영체제 현행 시스템 분석 고려사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운영체제 현행 시스템 분석 고려사항</h4>\n<p>신뢰도, 성능, 기술 지원, 주변 기기 , 구축 비용</p>\n<h2 id=\"미들웨어\" style=\"position:relative;\"><a href=\"#%EB%AF%B8%EB%93%A4%EC%9B%A8%EC%96%B4\" aria-label=\"미들웨어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>미들웨어</h2>\n<p>응용 프로그램과 환경 간에 원만한 통신이 이루어질 수 있도록 제어해주는 SW</p>\n<h4 id=\"was\" style=\"position:relative;\"><a href=\"#was\" aria-label=\"was permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WAS</h4>\n<p>서버계층에서 애플리케이션이 동작할 수 있는 환경 제공, 트랜잭션 처리, 이기종 시스템 연동</p>\n<h2 id=\"요구공학\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EA%B5%AC%EA%B3%B5%ED%95%99\" aria-label=\"요구공학 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요구공학</h2>\n<p>사용자 요구사항에 대한 도출, 분석, 명세 , 확인 및 검증하는 구조화된 활동</p>\n<h4 id=\"기능적-요구사항\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%8A%A5%EC%A0%81-%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD\" aria-label=\"기능적 요구사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기능적 요구사항</h4>\n<p>시스템이 제공하는 기능, 서비스에 대한 요구사항(사용자UI)</p>\n<h4 id=\"비기능적-요구사항\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EA%B8%B0%EB%8A%A5%EC%A0%81-%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD\" aria-label=\"비기능적 요구사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비기능적 요구사항</h4>\n<p>시스템이 수행하는 기능 이외의 사항(백엔드)</p>\n<h4 id=\"요구사항-개발-단계\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EA%B0%9C%EB%B0%9C-%EB%8B%A8%EA%B3%84\" aria-label=\"요구사항 개발 단계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요구사항 개발 단계</h4>\n<ol>\n<li>도출\n<ul>\n<li>인터뷰 : 이해 관계자와 직접 대화</li>\n<li>설문조사 : 설문지, 여론조사</li>\n<li>브레인스토밍 : 말을 꺼내기 쉬운 분위기로 만들어 비판 없이 수용할 수 있도록 하는 회의</li>\n<li>델파이 기법 : 전문가의 경험적 지식을 통한 문제 해결 방법</li>\n<li>롤 플레잉 : 여러 사람이 각자가 맡은 역을 연기</li>\n<li>워크숍 : 단기간에 다양하고 전문적인 정보를 획득하고 공유</li>\n</ul>\n</li>\n<li>분석\n<ul>\n<li>청취 기술</li>\n<li>인터뷰와 질문 기술</li>\n</ul>\n</li>\n<li>명세\n<ul>\n<li>비정형 명세 기법\n<ul>\n<li>자연어 기반</li>\n<li>사용자와 개발자 이해 용이</li>\n<li>명확성 및 검증 문제</li>\n</ul>\n</li>\n<li>정형 명세 기법\n<ul>\n<li>수학적인 원리와 표기법, Z-스키마, Petri Nets</li>\n<li>표현 간결, 명확성 및 검증 용이</li>\n<li>기법 이해 어려움</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>확인 및 검증\n<ul>\n<li>정형 기술 검토\n<ul>\n<li>동료 검토 : 2~3명이 진행, 작성자가 설명하고 이해관계자들이 설명을 들으면서 결함 발견</li>\n<li>워크스루 : 검토자료를 회의 전에 배포해서 사전검토한 후 짧은 시간동안 회의 진행</li>\n<li>인스펙션 : 다른 전문가 또는 팀이 검사하여 오류를 찾아내는 공식적 검토 방법</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0\">소프트웨어 개발방법론</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%95%A0%EC%9E%90%EC%9D%BC\">애자일</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B9%84%EC%9A%A9%EC%82%B0%EC%A0%95-%EB%AA%A8%ED%98%95\">비용산정 모형</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9D%BC%EC%A0%95%EA%B4%80%EB%A6%AC-%EB%AA%A8%EB%8D%B8\">일정관리 모델</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98\">소프트웨어 아키텍처</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%ED%8C%A8%ED%84%B4-%EC%9C%A0%ED%98%95\">소프트웨어 아키텍처 패턴 유형</a></li>\n<li><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EB%B9%84%EC%9A%A9-%ED%8F%89%EA%B0%80-%EB%AA%A8%EB%8D%B8-%EC%A2%85%EB%A5%98\">소프트웨어 아키텍처 비용 평가 모델 종류</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4-%EC%A4%91%EC%9A%94-%EC%98%81%EB%AC%B8%EB%AA%85%EB%8F%84-%EB%8B%A4-%EC%99%B8%EC%9A%B8-%EA%B2%83\">디자인 패턴 (중요, 영문명도 다 외울 것)</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%83%9D%EC%84%B1-bprofas\">생성 (bprofas)</a></li>\n<li><a href=\"#%EA%B5%AC%EC%A1%B0-abcdffp\">구조 (abcdffp)</a></li>\n<li><a href=\"#%ED%96%89%EC%9C%84%EB%82%98%EB%A8%B8%EC%A7%80\">행위(나머지)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C\">운영체제</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C-%ED%98%84%ED%96%89-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%B6%84%EC%84%9D-%EA%B3%A0%EB%A0%A4%EC%82%AC%ED%95%AD\">운영체제 현행 시스템 분석 고려사항</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%AF%B8%EB%93%A4%EC%9B%A8%EC%96%B4\">미들웨어</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#was\">WAS</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9A%94%EA%B5%AC%EA%B3%B5%ED%95%99\">요구공학</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EA%B8%B0%EB%8A%A5%EC%A0%81-%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD\">기능적 요구사항</a></li>\n<li><a href=\"#%EB%B9%84%EA%B8%B0%EB%8A%A5%EC%A0%81-%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD\">비기능적 요구사항</a></li>\n<li><a href=\"#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD-%EA%B0%9C%EB%B0%9C-%EB%8B%A8%EA%B3%84\">요구사항 개발 단계</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"소프트웨어 개발방법론 구조적 방법론 : 전체 시스템을 기능에 따라 나누어 개발하고, 이를 통합함(하향식) 나씨-슈나이더만 차트 사용(도형식, 제어 논리 구조, 명확한 식별) 정보공학 방법론 : 기업의 정보시스템을 구축하기 위한 계획(ISP), 분석, 설계 등의 전과정을 형상화 객체지향 방법론 : 현실 세계의 개체(Entity)를 속성과 메소드가 결합된 형태의 객체로 표현 컴포넌트 기반 방법론(CBD) : 컴포넌트를 조립해 하나의 새로운 응용 프로그램 작성 애자일 방법론 : 절차보다는 사람이 중심, 변화에 유연하고 신속하게 적응하면서 효율적으로 시스템 개발 제품계열 방법론 : 특정 제품에 적용하고 싶은 공통된 기능을 정의해 개발, 임베디드에 유용 애자일 XP : 의사소통 개선과 즉각적 피드백 5가지 가치 : 용기, 단순성, 의사소통, 존중, 피드백 의사(소통)선생님 피(드백)존(중) 용기에 담(순성)아주세요 by 홍달쌤 12가지 기본 원리 짝 프로그래밍(Pair Programming…","frontmatter":{"date":"May 29, 2024","title":"2024 정보처리기사 실기 요약 - (1) 요구사항","categories":"STUDY","author":"심우진","emoji":"🪪"},"fields":{"slug":"/ceritificate_01/"}},"next":{"id":"73ff04d3-71e3-5bd1-97ea-6c1d0da702b6","html":"<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<p>2024년도 1회차에 정보처리기사를 준비했었습니다. 개정 후 난이도가 어려워진 대신 개발자가 알아야할 컴퓨터 사이언스 관련 지식을 체계적으로 학습할 수 있도록 잘 짜여진 시험이라 자격증 이외에도 비전공자로써 관련 지식을 쌓는데 큰 도움이 되었습니다.</p>\n<h2 id=\"난이도-체감\" style=\"position:relative;\"><a href=\"#%EB%82%9C%EC%9D%B4%EB%8F%84-%EC%B2%B4%EA%B0%90\" aria-label=\"난이도 체감 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>난이도 체감</h2>\n<h3 id=\"필기시험\" style=\"position:relative;\"><a href=\"#%ED%95%84%EA%B8%B0%EC%8B%9C%ED%97%98\" aria-label=\"필기시험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>필기시험</h3>\n<p>필기 시험은 5과목으로 구성되어 범위가 넓고 외울 지식이 아주 많아 보이지만 실제 시험은 객관식 4지선다 형식인데다가 기존 기출문제를 풀어본 문제가 그대로 출제되는게 10~20% 정도를 차지합니다.</p>\n<p>햇갈리게 함정을 파놓기 보다는 어렴풋이 본 기억만 나도 정답을 고르기 쉬워서 진짜 공부를 안한게 아니라면 1주일 정도만 공부해도 쉽게 합격할 수 있는 난이도 였다고 느껴졌습니다. 유튜브에 올라온 1시간 정도 분량의 필기 과목별 강의 영상을 1회독 하고 개정 이후 CBT 이전의 기출 문제만 다 풀어보고 오답인 부분을 체크하는 정도로 공부했을 때 평균 85~90점 정도의 점수를 받을 수 있었습니다.</p>\n<h3 id=\"실기시험\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EA%B8%B0%EC%8B%9C%ED%97%98\" aria-label=\"실기시험 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실기시험</h3>\n<p>실기시험은 합격률이 15~20% 정도인 것만 봐도 난이도가 필기에 비해 훨씬 높은걸 알 수 있습니다. 필기에서 나온 범위 그대로 이지만 필기는 아주 가볍게 외워도 합격할 수 있음에 비해 주관식 문제인데다가 개념별로 가장 기본적이고 중요한 내용을 키워드 위주로 암기하는 방식으로는 정답을 맞출 수 없어서 조금 더 깊이 있게 알 필요가 있었고, 기본적인 SQL 문법을 완벽하게 암기하고 자주 출제되는 계산식 문제 유형을 파악하는 것과 8문제 정도 출제되는 파이썬, 자바, C언어 문제를 기출 유형별로 시프트연산자 나 연산자우선순위, 자바코드의 실행순서와 생성자 / 메서드오버라이딩의 개념, 반복문의 제약 조건별로 몇번이나 반복되는가 등을 중점으로 학습할 필요가 있었습니다.</p>\n<ul>\n<li>SW이론 암기문제 (6-8문제) : 노력 대비 맞추기 가장 쉬운 유형들 입니다.</li>\n<li>기본적인 코딩문제 (4-6문제) : 역시 쉬운 유형인데 실수하기 매우 쉬우므로 연습문제와 기출문제를 모두 풀어보시길 바랍니다.</li>\n<li>DB / SQL 문제 (2-3문제) : 기본적인 문법 몇가지만 암기하면 맞추기 쉬운데 어렵게 나올 수도 있습니다.</li>\n<li>킬러문항 코딩문제 (2-3문제) : 시저암호 나 지뢰찾기 등 시간도 많이 걸리고 복잡해서 중간에 꼬이기 쉬운 가장 어려운 문항들 입니다. 준비시간이 짧으시다면 과감하게 포기하시길 추천드립니다.</li>\n<li>계산식 문제 (1-2문제) : 유형이 매우 다양하고 매번 새로운 유형으로 꼬아내는 방식이라 난이도가 높아서 준비기간이 짧으시다면 과감하게 포기하시길 추천드립니다.</li>\n<li>신기술 관련 문제(0-1문제) : 기존 공부내용에서 전혀 볼 수 없었던 생뚱맞을걸 물어보는 문제 입니다. 합격률 조절용 이라 못맞춘다고 생각하시면 됩니다.</li>\n</ul>\n<p>필기시험 공부만 했어도 맞출 수 있는 문제가 2-4문제\n난이도가 매우 높아서 포기할만한 문제가 2-4문제\n나머지는 공부하기에 따라 50~75 점 정도에 많이 분포 되게끔 짜인 시험이라고 느꼈습니다.</p>\n<h2 id=\"정보처리기사-실기-공부법\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC-%EC%8B%A4%EA%B8%B0-%EA%B3%B5%EB%B6%80%EB%B2%95\" aria-label=\"정보처리기사 실기 공부법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정보처리기사 실기 공부법</h2>\n<p>필기에 나온 5과목을 실제 개발 프로젝트가 진행되는 순서에 맞게 각 단계 별로 필요한 지식이 무엇인지 정리하는 방식으로 암기하시는게 나중에 일할 때 필요한 지식을 배운다 생각해서 잘 외워지고, 코딩 문제에서 난이도 낮은 문제들이 푸는데 어떤 개념들이 필요한지 파악해서 실수하지 않아야 합니다.</p>\n<h2 id=\"이론-요약\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%A1%A0-%EC%9A%94%EC%95%BD\" aria-label=\"이론 요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이론 요약</h2>\n<h3 id=\"1-요구사항\" style=\"position:relative;\"><a href=\"#1-%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD\" aria-label=\"1 요구사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 요구사항</h3>\n<p><a href=\"https://woogooree.github.io/ceritificate_01\">https://woogooree.github.io/ceritificate_01</a></p>\n<h3 id=\"2-데이터입출력\" style=\"position:relative;\"><a href=\"#2-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5\" aria-label=\"2 데이터입출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 데이터입출력</h3>\n<p>(업로드 예정)</p>\n<h2 id=\"코딩문제-요약\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%94%A9%EB%AC%B8%EC%A0%9C-%EC%9A%94%EC%95%BD\" aria-label=\"코딩문제 요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코딩문제 요약</h2>\n<p>(기출이 제일 중요하고 교재의 코딩관련 연습문제도 모두 풀어보세요)</p>\n<p>(업로드 예정)</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EA%B0%9C%EC%9A%94\">개요</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%82%9C%EC%9D%B4%EB%8F%84-%EC%B2%B4%EA%B0%90\">난이도 체감</a></p>\n<ul>\n<li><a href=\"#%ED%95%84%EA%B8%B0%EC%8B%9C%ED%97%98\">필기시험</a></li>\n<li><a href=\"#%EC%8B%A4%EA%B8%B0%EC%8B%9C%ED%97%98\">실기시험</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC-%EC%8B%A4%EA%B8%B0-%EA%B3%B5%EB%B6%80%EB%B2%95\">정보처리기사 실기 공부법</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9D%B4%EB%A1%A0-%EC%9A%94%EC%95%BD\">이론 요약</a></p>\n<ul>\n<li><a href=\"#1-%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD\">1. 요구사항</a></li>\n<li><a href=\"#2-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9E%85%EC%B6%9C%EB%A0%A5\">2. 데이터입출력</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%BD%94%EB%94%A9%EB%AC%B8%EC%A0%9C-%EC%9A%94%EC%95%BD\">코딩문제 요약</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"May 29, 2024","title":"2024 정보처리기사 후기 및 요약정리","categories":"STUDY","author":"심우진","emoji":"🪪"},"fields":{"slug":"/certificate_main/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://woogooree.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/ceritificate_01/","nextSlug":"/certificate_main/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}