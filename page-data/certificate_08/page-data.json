{"componentChunkName":"component---src-templates-blog-template-js","path":"/certificate_08/","result":{"data":{"cur":{"id":"f6a334da-ffcd-5402-b377-f30fb5d5c2a6","html":"<h2 id=\"select\" style=\"position:relative;\"><a href=\"#select\" aria-label=\"select permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SELECT</h2>\n<ul>\n<li>SELECT 절 / WHERE 절 / GROUP BY 절 / ORDER BY 절로 나눌 수 있다.</li>\n<li>SELECT 다음에는 속성 + FROM</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">SELECT 속성명 FROM 테이블명\r\n// 속성명 다음에 as 별칭명과 그룹함수(COUNT(속성), SUM(속성) 등) 사용가능\r\nWHERE 조건문\r\nGROUP BY 속성명 HAVING 조건문\r\nORDER BY 속성 ASC(오름차순) / DESC(내림차순)</code></pre></div>\n<h2 id=\"insert\" style=\"position:relative;\"><a href=\"#insert\" aria-label=\"insert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INSERT</h2>\n<ul>\n<li>INSERT 다음에는 INTO</li>\n</ul>\n<h2 id=\"delete\" style=\"position:relative;\"><a href=\"#delete\" aria-label=\"delete permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DELETE</h2>\n<ul>\n<li>DELETE 다음에는 FROM</li>\n</ul>\n<h2 id=\"update\" style=\"position:relative;\"><a href=\"#update\" aria-label=\"update permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UPDATE</h2>\n<ul>\n<li>UPDATE 다음에는 테이블명 + SET</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#select\">SELECT</a></li>\n<li><a href=\"#insert\">INSERT</a></li>\n<li><a href=\"#delete\">DELETE</a></li>\n<li><a href=\"#update\">UPDATE</a></li>\n</ul>\n</div>","excerpt":"SELECT SELECT 절 / WHERE 절 / GROUP BY 절 / ORDER BY 절로 나눌 수 있다. SELECT 다음에는 속성 + FROM INSERT INSERT 다음에는 INTO DELETE DELETE 다음에는 FROM UPDATE UPDATE 다음에는 테이블명 + SET SELECT INSERT DELETE UPDATE","frontmatter":{"date":"May 31, 2024","title":"2024 정보처리기사 실기 요약 - (8) SQL 핵심 요약","categories":"STUDY","author":"심우진","emoji":"🪪"},"fields":{"slug":"/certificate_08/"}},"next":{"id":"a20db1ef-d012-5338-abf4-18d51fb1585a","html":"<h2 id=\"비트-연산자와-우선순위\" style=\"position:relative;\"><a href=\"#%EB%B9%84%ED%8A%B8-%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\" aria-label=\"비트 연산자와 우선순위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비트 연산자와 우선순위</h2>\n<h2 id=\"반복문-함정-패턴\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EB%B3%B5%EB%AC%B8-%ED%95%A8%EC%A0%95-%ED%8C%A8%ED%84%B4\" aria-label=\"반복문 함정 패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반복문 함정 패턴</h2>\n<h2 id=\"c언어---포인터\" style=\"position:relative;\"><a href=\"#c%EC%96%B8%EC%96%B4---%ED%8F%AC%EC%9D%B8%ED%84%B0\" aria-label=\"c언어   포인터 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>C언어 - 포인터</h2>\n<h2 id=\"자바---생성자\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94---%EC%83%9D%EC%84%B1%EC%9E%90\" aria-label=\"자바   생성자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바 - 생성자</h2>\n<h2 id=\"자바---메서드-오버로딩오버라이딩\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94---%EB%A9%94%EC%84%9C%EB%93%9C-%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9\" aria-label=\"자바   메서드 오버로딩오버라이딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바 - 메서드 오버로딩/오버라이딩</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%B9%84%ED%8A%B8-%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\">비트 연산자와 우선순위</a></li>\n<li><a href=\"#%EB%B0%98%EB%B3%B5%EB%AC%B8-%ED%95%A8%EC%A0%95-%ED%8C%A8%ED%84%B4\">반복문 함정 패턴</a></li>\n<li><a href=\"#c%EC%96%B8%EC%96%B4---%ED%8F%AC%EC%9D%B8%ED%84%B0\">C언어 - 포인터</a></li>\n<li><a href=\"#%EC%9E%90%EB%B0%94---%EC%83%9D%EC%84%B1%EC%9E%90\">자바 - 생성자</a></li>\n<li><a href=\"#%EC%9E%90%EB%B0%94---%EB%A9%94%EC%84%9C%EB%93%9C-%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9\">자바 - 메서드 오버로딩/오버라이딩</a></li>\n</ul>\n</div>","frontmatter":{"date":"May 30, 2024","title":"2024 정보처리기사 실기 요약 - (7) 코딩 핵심 요약","categories":"STUDY","author":"심우진","emoji":"🪪"},"fields":{"slug":"/certificate_07/"}},"prev":{"id":"2661dff5-082c-5cf9-addc-a0e72d1fc80c","html":"<h2 id=\"형변환\" style=\"position:relative;\"><a href=\"#%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>형변환</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">int i = 10;\ndouble b = i; // 컴파일러가 자동으로 암시적 변환 (더 큰 자료형)\n\ndouble d = 10.5;\nint i = (int)d; // 명시적 형 변환 (자료구조가 같은 형태만)\n</code></pre></div>\n<h2 id=\"박싱과-언박싱\" style=\"position:relative;\"><a href=\"#%EB%B0%95%EC%8B%B1%EA%B3%BC-%EC%96%B8%EB%B0%95%EC%8B%B1\" aria-label=\"박싱과 언박싱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>박싱과 언박싱</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">// Boxing (값 형식을 참조 형식으로 변환)\nobject obj = 123;\n\n// Unboxing (참조 형식을 값 형식으로 변환)\nint i = (int)obj;\n\n// 박싱은 값 형식을 참조 형식으로 변환하느라 메모리 할당 및 복사가 일어나서 성능에 부담을 주게 되므로 자주 사용하지 않음</code></pre></div>\n<h2 id=\"as-operator-참조-형식을-다른-참조형식으로-변환-실패시-null-반환\" style=\"position:relative;\"><a href=\"#as-operator-%EC%B0%B8%EC%A1%B0-%ED%98%95%EC%8B%9D%EC%9D%84-%EB%8B%A4%EB%A5%B8-%EC%B0%B8%EC%A1%B0%ED%98%95%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98-%EC%8B%A4%ED%8C%A8%EC%8B%9C-null-%EB%B0%98%ED%99%98\" aria-label=\"as operator 참조 형식을 다른 참조형식으로 변환 실패시 null 반환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>as operator (참조 형식을 다른 참조형식으로 변환, 실패시 null 반환)</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">\nvoid BoxingUnboxing(object obj)\n{\n\tButton? button = obj as Button; // as Button 형태인 경우에만 button에 저장하고 아닐 경우 null 값을 저장하기 때문에 Button? 자료형로 선언함\n\tif (button != null)\n\t{\n\t\tConsole.WriteLine(button.GetString());\n\t}\n\telse\n\t{\n\t\tConsole.WriteLine(&quot;button is null&quot;);\n\t}\n\t\n}\n\nBoxingUnboxing(new Button()); // 이렇게 버튼 형으로 언박싱하면 button으로 취급되고 하지 않으면 null로 적용됨\n\n</code></pre></div>\n<h2 id=\"convert-데이터-타입-변환\" style=\"position:relative;\"><a href=\"#convert-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98\" aria-label=\"convert 데이터 타입 변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Convert (데이터 타입 변환)</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">string s = &quot;10.5&quot;;\ndouble d = Convert.ToDouble(s); // Convert를 사용하면 형태가 다른 자료형도 변환이 가능하다.\n\ndouble d2 = double.Parse(s); // Parse 를 사용해도 같다.\n\n// 유효성을 체크한 후 넘기고 싶다면 try.Parse 사용\ndouble.tryParse(s, out double d);\nint.tryParse(s, out int i); //10.5 는 int 형식이 아니기에 0이 반환됨\n\nif (int.tryParse(s, out int i))\n{\n\tconsole.WriteLine(&quot;변환성공&quot;)\n} \nelse\n{\n\tconsole.WriteLine(&quot;변환실패&quot;) // 실패한 것으로 취급하고 이게 출력됨\n}</code></pre></div>\n<h2 id=\"배열-형변환\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"배열 형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 형변환</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">class Animal\n{\n\tpublic string Name { get; set; } = default;\n}\n\nclass Cat : Animal { }\nclass Dog : Animal { }\nclass Pig : Animal { }\nclass Tiger : Animal { }\n\nList&lt;Animal&gt; animals = new()\n{\n\tnew Cat {Name = &quot;냐옹이1&quot;},\n\tnew Cat {Name = &quot;냐옹이2&quot;},\n\tnew Cat {Name = &quot;냐옹이3&quot;},\n};\n\n// Cast\nList&lt;Cat&gt; cats = animals.Cast&lt;Cat&gt;().ToList(); // Cat이 아닌 형태가 있으면 오류가 남\n\n// ofType : 리스트에 Cat, Dog 등 섞여 있을 때 Cat 만 추출함\nList&lt;Cat&gt; cats = animals.ofType&lt;Cat&gt;().ToList();\n\nforeach (Cat cat in cats)\n{\n\tConsole.WriteLine(cat.Name);\n}</code></pre></div>\n<h2 id=\"데이터-타입\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\" aria-label=\"데이터 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 타입</h2>\n<p>int == System.Int32\nstring == System.String\nbool == System.Boolean</p>\n<p>object : C# 모든 데이터 타입의 최상위 기본 클래스, 박싱/언박싱 가능</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">//명시적 변수 선언\nint n = 123; //초기화\nstring name;\nfloat s;\n\n//암시적 변수 선언(초기화 필수)\nvar number = 123;\nvar name = &quot;홍길동&quot;;\nvar c = &#39;가&#39;;\nvar score = 10.5; // double로 가변됨</code></pre></div>\n<h2 id=\"리터럴\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"리터럴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴</h2>\n<p>소스 코드에서 값을 나타내는 고정된 값\n컴파일 시간에 값을 결정함\n실행 시간에 변경 되지 않음</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">int x = 10; // 10은 정수형 리터럴\n\n//리터럴이 아닌 것은?\nint z = x * y; // x와 y가 아직 안정해졌으므로 리터럴이 아님\nstring? str = Console.ReadLine(); // 입력값 받기\nConsole.WriteLine(11d.GetType()); // 아직 안정해져서 리터럴이 아님\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">// 숫자형 접미사\nvar longValue = 10f; // 자료형을 알려주는 접미사 </code></pre></div>\n<h2 id=\"스택-메모리\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%83%9D-%EB%A9%94%EB%AA%A8%EB%A6%AC\" aria-label=\"스택 메모리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스택 메모리</h2>\n<p>스택 메모리는 함수 호출과 관련된 변수, 지역 볓수 및 매게변수를 저장하는 데 사용됨 (후입선출 방식으로 관리됨, 메모리 할당과 해제가 자동이며 매우 빠름)</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">void MyMethod()\n{\n\tint i = 123; // 4바이트 스택 메모리 할당\n}</code></pre></div>\n<h2 id=\"힙-메모리\" style=\"position:relative;\"><a href=\"#%ED%9E%99-%EB%A9%94%EB%AA%A8%EB%A6%AC\" aria-label=\"힙 메모리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>힙 메모리</h2>\n<p>프로그램 실행 도중 동적으로 할당되고 해제되는 변수와 데이터를 저장하는 데 사용됨 (메모리 할당과 해제를 명시적으로 프로그래머가 수행해야하지만 C#에서는 GC가 자동으로 처리함)</p>\n<p>클래스, 인터페이스, 배열, 대리자, 객체, 문자열 등이 C# 참조 형식임</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">var p1 = new Person() { name = &quot;홍&quot; }\nvar p2 = new person() { name = &quot;김&quot; }</code></pre></div>\n<h2 id=\"index-찾기\" style=\"position:relative;\"><a href=\"#index-%EC%B0%BE%EA%B8%B0\" aria-label=\"index 찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Index 찾기</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">string str = &quot;Hi, Good Morning&quot;;\n\n//IndexOf : 어디 있는지 찾아줌\nint i = str.IndexOf(&quot;Good&quot;) // 찾지 못하면 -1 반환\nint i_ = str.LastIndexOf(&quot;Good&quot;) // 뒤에서부터 찾음\n\n//StartsWith &amp; EndsWith : 지정된 걸로 시작/끝 나는지 확인\nbool result = str.StartsWith(&quot;Hi&quot;);\nbool result_ = strEndsWith(&quot;Hi&quot;); // False\n\n//Contains : 존재하는지 알려줌\nbool result = str.Contains(&quot;Morning&quot;); //True\nbool reseult_ = str.Contains(&quot;morning&quot;); //False\n\n// 지정된 문자열을 찾아 다른 문자열을 변환\nstring result = str.Replace(&quot;Morning&quot;, &quot;evening&quot;)</code></pre></div>\n<p>(출처) 유튜브 - 까불이코더 님</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%98%95%EB%B3%80%ED%99%98\">형변환</a></li>\n<li><a href=\"#%EB%B0%95%EC%8B%B1%EA%B3%BC-%EC%96%B8%EB%B0%95%EC%8B%B1\">박싱과 언박싱</a></li>\n<li><a href=\"#as-operator-%EC%B0%B8%EC%A1%B0-%ED%98%95%EC%8B%9D%EC%9D%84-%EB%8B%A4%EB%A5%B8-%EC%B0%B8%EC%A1%B0%ED%98%95%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98-%EC%8B%A4%ED%8C%A8%EC%8B%9C-null-%EB%B0%98%ED%99%98\">as operator (참조 형식을 다른 참조형식으로 변환, 실패시 null 반환)</a></li>\n<li><a href=\"#convert-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98\">Convert (데이터 타입 변환)</a></li>\n<li><a href=\"#%EB%B0%B0%EC%97%B4-%ED%98%95%EB%B3%80%ED%99%98\">배열 형변환</a></li>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\">데이터 타입</a></li>\n<li><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4\">리터럴</a></li>\n<li><a href=\"#%EC%8A%A4%ED%83%9D-%EB%A9%94%EB%AA%A8%EB%A6%AC\">스택 메모리</a></li>\n<li><a href=\"#%ED%9E%99-%EB%A9%94%EB%AA%A8%EB%A6%AC\">힙 메모리</a></li>\n<li><a href=\"#index-%EC%B0%BE%EA%B8%B0\">Index 찾기</a></li>\n</ul>\n</div>","frontmatter":{"date":"June 07, 2024","title":"C# 데이터타입과 형변환","categories":"CODING","author":"심우진","emoji":"💡"},"fields":{"slug":"/coding_01/"}},"site":{"siteMetadata":{"siteUrl":"https://woogooree.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/certificate_08/","nextSlug":"/certificate_07/","prevSlug":"/coding_01/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}