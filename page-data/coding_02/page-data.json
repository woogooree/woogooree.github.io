{"componentChunkName":"component---src-templates-blog-template-js","path":"/coding_02/","result":{"data":{"cur":{"id":"84cb5fad-5c45-5fcd-99a2-509930ecfcd0","html":"<h2 id=\"배열-인덱싱-연산자\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EC%9D%B8%EB%8D%B1%EC%8B%B1-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"배열 인덱싱 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 인덱싱 ‘^연산자’</h2>\n<p>8.0 버전부터 사용할 수 있게 된 ^ 연산자를 이용해서 뒤에서부터 접근할 수 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">public ArraySlice()\n{\n\tvar list = new List&lt;string&gt;() {&quot;apple&quot;, &quot;banana&quot;};\n\n\tstring result = list[^2]; // 뒤에서 2 번째 인덱스를 구하라\n\n\tConsole.WriteLine($&quot;result: {result}&quot;);\n\t/*\n\t\t==&gt; string result = list[list.conut - 2];\n\t*/\n}</code></pre></div>\n<h2 id=\"linq를-이용하여-배열-자르기\" style=\"position:relative;\"><a href=\"#linq%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B0%B0%EC%97%B4-%EC%9E%90%EB%A5%B4%EA%B8%B0\" aria-label=\"linq를 이용하여 배열 자르기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linq를 이용하여 배열 자르기</h2>\n<p>Skip 과 Take 를 통해 가져오는 방식을 사용하면 배열의 Range 를 넘어선 요소를 선택하게 되더라도\n오류가 발생하지 않는 구조적 차이가 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">public ArraySlice()\n{\n\tvar list = new List&lt;string&gt;() {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;};\n\n\tIEnumerable&lt;string&gt; skip = list.Skip(2); // 앞 2개 건너뛰기\n\tIEnumerable&lt;string&gt; take = list.Take(2); // 앞 2개 가져오기\n\tIEnumerable&lt;string&gt; skipAndTake = list.Skip(2).Take(2); // 앞 2개 건너뛰고 3번째부터 2개 가져오기\n\tList&lt;string&gt; getRange = list.GetRange(2, 2); // SkipAndTake와 똑같이 동작하지만 배열 범위를 넘으면 오류가 발생함\n}</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%B0%B0%EC%97%B4-%EC%9D%B8%EB%8D%B1%EC%8B%B1-%EC%97%B0%EC%82%B0%EC%9E%90\">배열 인덱싱 ‘^연산자’</a></li>\n<li><a href=\"#linq%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B0%B0%EC%97%B4-%EC%9E%90%EB%A5%B4%EA%B8%B0\">Linq를 이용하여 배열 자르기</a></li>\n</ul>\n</div>","excerpt":"배열 인덱싱 ‘^연산자’ 8.0 버전부터 사용할 수 있게 된 ^ 연산자를 이용해서 뒤에서부터 접근할 수 있다 Linq를 이용하여 배열 자르기 Skip 과 Take 를 통해 가져오는 방식을 사용하면 배열의 Range 를 넘어선 요소를 선택하게 되더라도\n오류가 발생하지 않는 구조적 차이가 있다 배열 인덱싱 ‘^연산자’ Linq를 이용하여 배열 자르기","frontmatter":{"date":"June 08, 2024","title":"C# 배열 인덱싱","categories":"CODING","author":"심우진","emoji":"💡"},"fields":{"slug":"/coding_02/"}},"next":{"id":"82c59938-2f5b-50da-99f6-70ca715ecf6c","html":"<h2 id=\"형변환\" style=\"position:relative;\"><a href=\"#%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>형변환</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">int i = 10;\ndouble b = i; // 컴파일러가 자동으로 암시적 변환 (더 큰 자료형)\n\ndouble d = 10.5;\nint i = (int)d; // 명시적 형 변환 (자료구조가 같은 형태만)\n</code></pre></div>\n<h2 id=\"박싱과-언박싱\" style=\"position:relative;\"><a href=\"#%EB%B0%95%EC%8B%B1%EA%B3%BC-%EC%96%B8%EB%B0%95%EC%8B%B1\" aria-label=\"박싱과 언박싱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>박싱과 언박싱</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">// Boxing (값 형식을 참조 형식으로 변환)\nobject obj = 123;\n\n// Unboxing (참조 형식을 값 형식으로 변환)\nint i = (int)obj;\n\n// 박싱은 값 형식을 참조 형식으로 변환하느라 메모리 할당 및 복사가 일어나서 성능에 부담을 주게 되므로 자주 사용하지 않음</code></pre></div>\n<h2 id=\"as-operator-참조-형식을-다른-참조형식으로-변환-실패시-null-반환\" style=\"position:relative;\"><a href=\"#as-operator-%EC%B0%B8%EC%A1%B0-%ED%98%95%EC%8B%9D%EC%9D%84-%EB%8B%A4%EB%A5%B8-%EC%B0%B8%EC%A1%B0%ED%98%95%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98-%EC%8B%A4%ED%8C%A8%EC%8B%9C-null-%EB%B0%98%ED%99%98\" aria-label=\"as operator 참조 형식을 다른 참조형식으로 변환 실패시 null 반환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>as operator (참조 형식을 다른 참조형식으로 변환, 실패시 null 반환)</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">\nvoid BoxingUnboxing(object obj)\n{\n\tButton? button = obj as Button; // as Button 형태인 경우에만 button에 저장하고 아닐 경우 null 값을 저장하기 때문에 Button? 자료형로 선언함\n\tif (button != null)\n\t{\n\t\tConsole.WriteLine(button.GetString());\n\t}\n\telse\n\t{\n\t\tConsole.WriteLine(&quot;button is null&quot;);\n\t}\n\t\n}\n\nBoxingUnboxing(new Button()); // 이렇게 버튼 형으로 언박싱하면 button으로 취급되고 하지 않으면 null로 적용됨\n\n</code></pre></div>\n<h2 id=\"convert-데이터-타입-변환\" style=\"position:relative;\"><a href=\"#convert-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98\" aria-label=\"convert 데이터 타입 변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Convert (데이터 타입 변환)</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">string s = &quot;10.5&quot;;\ndouble d = Convert.ToDouble(s); // Convert를 사용하면 형태가 다른 자료형도 변환이 가능하다.\n\ndouble d2 = double.Parse(s); // Parse 를 사용해도 같다.\n\n// 유효성을 체크한 후 넘기고 싶다면 try.Parse 사용\ndouble.tryParse(s, out double d);\nint.tryParse(s, out int i); //10.5 는 int 형식이 아니기에 0이 반환됨\n\nif (int.tryParse(s, out int i))\n{\n\tconsole.WriteLine(&quot;변환성공&quot;)\n} \nelse\n{\n\tconsole.WriteLine(&quot;변환실패&quot;) // 실패한 것으로 취급하고 이게 출력됨\n}</code></pre></div>\n<h2 id=\"배열-형변환\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%ED%98%95%EB%B3%80%ED%99%98\" aria-label=\"배열 형변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 형변환</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">class Animal\n{\n\tpublic string Name { get; set; } = default;\n}\n\nclass Cat : Animal { }\nclass Dog : Animal { }\nclass Pig : Animal { }\nclass Tiger : Animal { }\n\nList&lt;Animal&gt; animals = new()\n{\n\tnew Cat {Name = &quot;냐옹이1&quot;},\n\tnew Cat {Name = &quot;냐옹이2&quot;},\n\tnew Cat {Name = &quot;냐옹이3&quot;},\n};\n\n// Cast\nList&lt;Cat&gt; cats = animals.Cast&lt;Cat&gt;().ToList(); // Cat이 아닌 형태가 있으면 오류가 남\n\n// ofType : 리스트에 Cat, Dog 등 섞여 있을 때 Cat 만 추출함\nList&lt;Cat&gt; cats = animals.ofType&lt;Cat&gt;().ToList();\n\nforeach (Cat cat in cats)\n{\n\tConsole.WriteLine(cat.Name);\n}</code></pre></div>\n<h2 id=\"데이터-타입\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\" aria-label=\"데이터 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 타입</h2>\n<p>int == System.Int32\nstring == System.String\nbool == System.Boolean</p>\n<p>object : C# 모든 데이터 타입의 최상위 기본 클래스, 박싱/언박싱 가능</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">//명시적 변수 선언\nint n = 123; //초기화\nstring name;\nfloat s;\n\n//암시적 변수 선언(초기화 필수)\nvar number = 123;\nvar name = &quot;홍길동&quot;;\nvar c = &#39;가&#39;;\nvar score = 10.5; // double로 가변됨</code></pre></div>\n<h2 id=\"리터럴\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"리터럴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴</h2>\n<p>소스 코드에서 값을 나타내는 고정된 값\n컴파일 시간에 값을 결정함\n실행 시간에 변경 되지 않음</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">int x = 10; // 10은 정수형 리터럴\n\n//리터럴이 아닌 것은?\nint z = x * y; // x와 y가 아직 안정해졌으므로 리터럴이 아님\nstring? str = Console.ReadLine(); // 입력값 받기\nConsole.WriteLine(11d.GetType()); // 아직 안정해져서 리터럴이 아님\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">// 숫자형 접미사\nvar longValue = 10f; // 자료형을 알려주는 접미사 </code></pre></div>\n<h2 id=\"스택-메모리\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%83%9D-%EB%A9%94%EB%AA%A8%EB%A6%AC\" aria-label=\"스택 메모리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스택 메모리</h2>\n<p>스택 메모리는 함수 호출과 관련된 변수, 지역 볓수 및 매게변수를 저장하는 데 사용됨 (후입선출 방식으로 관리됨, 메모리 할당과 해제가 자동이며 매우 빠름)</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">void MyMethod()\n{\n\tint i = 123; // 4바이트 스택 메모리 할당\n}</code></pre></div>\n<h2 id=\"힙-메모리\" style=\"position:relative;\"><a href=\"#%ED%9E%99-%EB%A9%94%EB%AA%A8%EB%A6%AC\" aria-label=\"힙 메모리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>힙 메모리</h2>\n<p>프로그램 실행 도중 동적으로 할당되고 해제되는 변수와 데이터를 저장하는 데 사용됨 (메모리 할당과 해제를 명시적으로 프로그래머가 수행해야하지만 C#에서는 GC가 자동으로 처리함)</p>\n<p>클래스, 인터페이스, 배열, 대리자, 객체, 문자열 등이 C# 참조 형식임</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">var p1 = new Person() { name = &quot;홍&quot; }\nvar p2 = new person() { name = &quot;김&quot; }</code></pre></div>\n<h2 id=\"index-찾기\" style=\"position:relative;\"><a href=\"#index-%EC%B0%BE%EA%B8%B0\" aria-label=\"index 찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Index 찾기</h2>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">string str = &quot;Hi, Good Morning&quot;;\n\n//IndexOf : 어디 있는지 찾아줌\nint i = str.IndexOf(&quot;Good&quot;) // 찾지 못하면 -1 반환\nint i_ = str.LastIndexOf(&quot;Good&quot;) // 뒤에서부터 찾음\n\n//StartsWith &amp; EndsWith : 지정된 걸로 시작/끝 나는지 확인\nbool result = str.StartsWith(&quot;Hi&quot;);\nbool result_ = strEndsWith(&quot;Hi&quot;); // False\n\n//Contains : 존재하는지 알려줌\nbool result = str.Contains(&quot;Morning&quot;); //True\nbool reseult_ = str.Contains(&quot;morning&quot;); //False\n\n// 지정된 문자열을 찾아 다른 문자열을 변환\nstring result = str.Replace(&quot;Morning&quot;, &quot;evening&quot;)</code></pre></div>\n<p>(출처) 유튜브 - 까불이코더 님</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%98%95%EB%B3%80%ED%99%98\">형변환</a></li>\n<li><a href=\"#%EB%B0%95%EC%8B%B1%EA%B3%BC-%EC%96%B8%EB%B0%95%EC%8B%B1\">박싱과 언박싱</a></li>\n<li><a href=\"#as-operator-%EC%B0%B8%EC%A1%B0-%ED%98%95%EC%8B%9D%EC%9D%84-%EB%8B%A4%EB%A5%B8-%EC%B0%B8%EC%A1%B0%ED%98%95%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98-%EC%8B%A4%ED%8C%A8%EC%8B%9C-null-%EB%B0%98%ED%99%98\">as operator (참조 형식을 다른 참조형식으로 변환, 실패시 null 반환)</a></li>\n<li><a href=\"#convert-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85-%EB%B3%80%ED%99%98\">Convert (데이터 타입 변환)</a></li>\n<li><a href=\"#%EB%B0%B0%EC%97%B4-%ED%98%95%EB%B3%80%ED%99%98\">배열 형변환</a></li>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85\">데이터 타입</a></li>\n<li><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4\">리터럴</a></li>\n<li><a href=\"#%EC%8A%A4%ED%83%9D-%EB%A9%94%EB%AA%A8%EB%A6%AC\">스택 메모리</a></li>\n<li><a href=\"#%ED%9E%99-%EB%A9%94%EB%AA%A8%EB%A6%AC\">힙 메모리</a></li>\n<li><a href=\"#index-%EC%B0%BE%EA%B8%B0\">Index 찾기</a></li>\n</ul>\n</div>","frontmatter":{"date":"June 07, 2024","title":"C# 데이터타입과 형변환","categories":"CODING","author":"심우진","emoji":"💡"},"fields":{"slug":"/coding_01/"}},"prev":{"id":"a8e71f50-f797-5ac7-b82c-8dc3190c76b8","html":"<h2 id=\"control--k--e\" style=\"position:relative;\"><a href=\"#control--k--e\" aria-label=\"control  k  e permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Control + K + E</h2>\n<p>코드 정리 기능\n설정 : 분석 - 코드정리 - 코드정리구성 에서 커스터마이징 가능</p>\n<ul>\n<li>불필요한 Using 제거 / 정렬</li>\n<li>사용하지 않는 변수 제거</li>\n<li>불필요한 캐스트 제거</li>\n<li>암시적/명시적 형식 기본 설정 적용</li>\n</ul>\n<p><strong>자동 적용 시키는법</strong>\nControl + Q -> Cleanup -> 프로필 저장 시 코드정리 선택 -> 런코드.. 선택</p>\n<h2 id=\"control----t\" style=\"position:relative;\"><a href=\"#control----t\" aria-label=\"control    t permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Control + \\ + T</h2>\n<p>작업목록 기능\n주석을 이용해서 토큰 : 설명 식으로 작성한 작업목록 리스트를 작성하고 관리할 수 있음</p>\n<div class=\"gatsby-highlight\" data-language=\"c#\"><pre class=\"language-c#\"><code class=\"language-c#\">// TODO : 나중에 할 일</code></pre></div>\n<p>목록화 해서 커멘드를 누르면 작업 목록 리스트를 호출함</p>\n<p><strong>토큰 추가하는법</strong>\n도구 - 옵션 - 환경 및 작업 목록 : 토큰 목록 (추가)</p>\n<h2 id=\"상하화면분할\" style=\"position:relative;\"><a href=\"#%EC%83%81%ED%95%98%ED%99%94%EB%A9%B4%EB%B6%84%ED%95%A0\" aria-label=\"상하화면분할 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상하화면분할</h2>\n<p>원하는 탭의 스크롤바 상단 드래그 버튼을 잡고 내리면 분할됨\n(분할된 화면의 상단바를 도로 끌어올리면 원상복귀)</p>\n<h2 id=\"관련코드-윈도우창-호출\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A0%A8%EC%BD%94%EB%93%9C-%EC%9C%88%EB%8F%84%EC%9A%B0%EC%B0%BD-%ED%98%B8%EC%B6%9C\" aria-label=\"관련코드 윈도우창 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관련코드 윈도우창 호출</h2>\n<p>특정 코드의 정의를 보고 싶으면 F12 를 누르면 그 코드가 선언된 스페이스로 넘어감\nALT+F12 를 누르면 작은 크기로 스페이스가 호출되어서 화면이동 없이 편집가능</p>\n<p>출처 : 유튜브 까불이코더 님</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#control--k--e\">Control + K + E</a></li>\n<li><a href=\"#control----t\">Control + \\ + T</a></li>\n<li><a href=\"#%EC%83%81%ED%95%98%ED%99%94%EB%A9%B4%EB%B6%84%ED%95%A0\">상하화면분할</a></li>\n<li><a href=\"#%EA%B4%80%EB%A0%A8%EC%BD%94%EB%93%9C-%EC%9C%88%EB%8F%84%EC%9A%B0%EC%B0%BD-%ED%98%B8%EC%B6%9C\">관련코드 윈도우창 호출</a></li>\n</ul>\n</div>","frontmatter":{"date":"June 09, 2024","title":"Visual Studio 유용한 단축키","categories":"CODING","author":"심우진","emoji":"💡"},"fields":{"slug":"/coding_03/"}},"site":{"siteMetadata":{"siteUrl":"https://woogooree.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/coding_02/","nextSlug":"/coding_01/","prevSlug":"/coding_03/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}