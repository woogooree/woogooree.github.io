{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/PROJECT","result":{"pageContext":{"currentCategory":"PROJECT","categories":["All","WPF","PROJECT","C언어계열","프로젝트","컴퓨터이론","LINUX","CLOUD","개발환경"],"edges":[{"node":{"id":"c316bc0d-75c7-5890-942a-83493da5fb98","excerpt":"코드 설명 MVVM 구조로 만들어서\r\nView 는 MainWindow 하나로 구성되어 있고\r\n주요 기능은 MainWindow에서 MainViewModel을 호출하는 구조\r\n코어기능과 통신을 담당하는 기능은 Core 폴더와 Net.IO 폴더로 따로 작성하였고\r\n복잡한 디자인은 Themes 폴더에 xaml 로 작성해서 스타일을 적용하는 방식으로 구현하였음 클라이언트에서 통신을 담당하는 Server.cs 파일과\r\n따로 만든 콘솔앱 서버와 통신하는 서버-클라이언트 구조로 구현하였음 View (MainWindow.xaml) 코드 ViewModel 구성 요소 옵저버블컬렉션으로 리스트 관리 Users: 현재 연결된 사용자 목록을 관리하는 ObservableCollection.\r\nChats: 현재 채팅방의 메시지 목록을 관리하는 ObservableCollection.\r\nContacts: 사용자의 연락처 목록을 관리하는 ObservableCollection.\r\nMessages: 개별 메시지 모델을…","fields":{"slug":"/ProjectT_02/"},"frontmatter":{"categories":"WPF PROJECT","title":"WPF TCP 채팅 프로젝트 소스코드","date":"June 26, 2024"}},"next":{"fields":{"slug":"/ProjectT_01/"}},"previous":null},{"node":{"id":"9d23d1f9-8b30-5cda-8ca8-a45386d54dd9","excerpt":"프로젝트 개요 프로젝트명 어플리케이션 기반의 채팅서버 프로그램 (C# WPF TCP) 수행기간 2024.6.18 - 2024.6.30 프로젝트 수행 계획 (요구사항, 기능 명세)   주요 기능 닉네임 기반 사용자 연결 메시지 전송 및 수신 Firebase를 연동하여 채팅로그 저장 채팅방 별로 이전 채팅 불러오기 MVVM 구조로 MainWindow가 MainViewModel을 호출 TCP 서버-클라이언트 통신을 위한 로직 이해   소켓을 이용한 리스너/클라이언트의 구조를 파악하고 각 메서드의 역할을 나눠서 구현하게끔 노력 패킷리더와 패킷빌더를 정의하고 메시지 전송부분이 파싱되는 구조를 이해하려고 노력 소스코드 구성 다음 게시글에 정리해놨음 https://woogooree.github.io/ProjectT_02/ 결과물  배울게 정말 많은 프로젝트 였음! 프로젝트 개요 프로젝트명 수행기간 프로젝트 수행 계획 (요구사항, 기능 명세) 주요 기능 TCP 서버-클라이언트 통신을 위한 로직 …","fields":{"slug":"/ProjectT_01/"},"frontmatter":{"categories":"WPF PROJECT","title":"WPF TCP 채팅 프로젝트","date":"June 24, 2024"}},"next":{"fields":{"slug":"/c_03/"}},"previous":{"fields":{"slug":"/ProjectT_02/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}