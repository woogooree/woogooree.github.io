{"componentChunkName":"component---src-templates-blog-template-js","path":"/wpf_02/","result":{"data":{"cur":{"id":"e20cf48d-9f34-5439-bb67-38a302ad632a","html":"<h2 id=\"1-xaml\" style=\"position:relative;\"><a href=\"#1-xaml\" aria-label=\"1 xaml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. XAML</h2>\n<p>**XAML (Extensible Application Markup Language)**은 WPF에서 UI를 정의하는 데 사용되는 XML 기반 언어이다. XAML을 사용하면 UI를 선언적으로 정의할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Window</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>WpfApp.MainWindow<span class=\"token punctuation\">\"</span></span>\r\n        <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2006/xaml/presentation<span class=\"token punctuation\">\"</span></span>\r\n        <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2006/xaml<span class=\"token punctuation\">\"</span></span>\r\n        <span class=\"token attr-name\">Title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MainWindow<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>350<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>525<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Click Me<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Window</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이 예제는 간단한 윈도우와 버튼을 정의하는 XAML 코드이다.</p>\n<h2 id=\"2-코드-비하인드\" style=\"position:relative;\"><a href=\"#2-%EC%BD%94%EB%93%9C-%EB%B9%84%ED%95%98%EC%9D%B8%EB%93%9C\" aria-label=\"2 코드 비하인드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 코드 비하인드</h2>\n<p>XAML과 연결된 C# 코드를 코드 비하인드라고 한다. 이는 XAML로 정의된 UI 요소에 대한 이벤트 핸들러 및 기타 논리를 포함한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Windows</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">WpfApp</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Window</span></span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token function\">MainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"3-레이아웃\" style=\"position:relative;\"><a href=\"#3-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83\" aria-label=\"3 레이아웃 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 레이아웃</h2>\n<p>WPF XAML은 다양한 레이아웃 컨테이너를 제공하여 UI 요소를 배치할 수 있다.\r\n주요 레이아웃 컨테이너는 다음과 같다 :</p>\n<ul>\n<li><strong>Grid</strong>: 행과 열로 구성된 격자 레이아웃</li>\n<li><strong>StackPanel</strong>: 수직 또는 수평으로 요소를 쌓는 레이아웃</li>\n<li><strong>DockPanel</strong>: 요소를 도킹하여 배치하는 레이아웃</li>\n<li><strong>Canvas</strong>: 절대 위치를 사용하여 요소를 배치하는 레이아웃</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Auto<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2*<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\r\n\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button 1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button 2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button 3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button 4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3 id=\"그리드-기본-사용법\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A6%AC%EB%93%9C-%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"그리드 기본 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그리드 기본 사용법</h3>\n<p>그리드는 Grid.RowDefinitions와 Grid.ColumnDefinitions를 사용하여 행과 열을 정의한다.\r\n(Height와 Width 속성으로 크기를 설정할 수 있고 *으로 남는공간 비율 할당 및 Auto 설정 가능)</p>\n<ul>\n<li>셀 병합은 Grid.RowSpan과 Grid.ColumnSpan 속성을 사용한다.</li>\n<li>각 UI 요소는 Grid.Row와 Grid.Column 속성을 사용하여 특정 셀에 배치된다.</li>\n</ul>\n<h2 id=\"4-데이터-바인딩\" style=\"position:relative;\"><a href=\"#4-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"4 데이터 바인딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 데이터 바인딩</h2>\n<p>WPF의 데이터 바인딩은 UI 요소를 데이터 소스에 연결하는 강력한 기능이다.\r\n이는 MVVM(Model-View-ViewModel) 패턴에서 중요한 역할을 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TextBox</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{Binding Path=Name}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Window</span></span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token function\">MainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>DataContext <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Person</span> <span class=\"token punctuation\">{</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"John Doe\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"5-스타일과-템플릿\" style=\"position:relative;\"><a href=\"#5-%EC%8A%A4%ED%83%80%EC%9D%BC%EA%B3%BC-%ED%85%9C%ED%94%8C%EB%A6%BF\" aria-label=\"5 스타일과 템플릿 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 스타일과 템플릿</h2>\n<p>WPF XAML은 스타일과 템플릿을 사용하여 UI 요소의 모양과 동작을 정의할 수 있다.</p>\n<ul>\n<li><strong>스타일</strong>: 여러 UI 요소에 공통적으로 적용되는 속성 집합</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Window.Resources</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Setter</span> <span class=\"token attr-name\">Property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Background<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightBlue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Setter</span> <span class=\"token attr-name\">Property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Width<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Window.Resources</span><span class=\"token punctuation\">></span></span>\r\n\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Styled Button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li><strong>컨트롤 템플릿</strong>: 컨트롤의 기본 구조와 외관을 재정의하는 템플릿</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Window.Resources</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ControlTemplate</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MyButtonTemplate<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Border</span> <span class=\"token attr-name\">Background</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGreen<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">BorderBrush</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">BorderThickness</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPresenter</span> <span class=\"token attr-name\">HorizontalAlignment</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">VerticalAlignment</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Border</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ControlTemplate</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Window.Resources</span><span class=\"token punctuation\">></span></span>\r\n\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Custom Template<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Template</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{StaticResource MyButtonTemplate}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h4 id=\"6-이벤트-처리\" style=\"position:relative;\"><a href=\"#6-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%B2%98%EB%A6%AC\" aria-label=\"6 이벤트 처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 이벤트 처리</h4>\n<p>WPF에서는 다양한 이벤트를 통해 사용자 인터페이스와 상호 작용할 수 있다.\r\n대표적인 이벤트로는 클릭, 마우스 이동, 키보드 입력 등이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Click Me<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button_Click<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Button_Click</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RoutedEventArgs</span> e<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Button clicked!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"7-리소스resource와-스타일style\" style=\"position:relative;\"><a href=\"#7-%EB%A6%AC%EC%86%8C%EC%8A%A4resource%EC%99%80-%EC%8A%A4%ED%83%80%EC%9D%BCstyle\" aria-label=\"7 리소스resource와 스타일style permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 리소스(Resource)와 스타일(Style)</h2>\n<p>리소스와 스타일은 WPF 애플리케이션의 일관된 UI를 유지하고, 재사용 가능한 디자인 요소를 만들 때 유용하다.</p>\n<ul>\n<li><strong>StaticResource와 DynamicResource</strong></li>\n<li><strong>스타일과 템플릿</strong></li>\n<li><strong>리소스 사전 (Resource Dictionary)</strong></li>\n</ul>\n<p><strong>예제</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Window.Resources</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Setter</span> <span class=\"token attr-name\">Property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Background<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightBlue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Setter</span> <span class=\"token attr-name\">Property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Width<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Window.Resources</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"8-트리거trigger와-애니메이션animation\" style=\"position:relative;\"><a href=\"#8-%ED%8A%B8%EB%A6%AC%EA%B1%B0trigger%EC%99%80-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98animation\" aria-label=\"8 트리거trigger와 애니메이션animation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 트리거(Trigger)와 애니메이션(Animation)</h2>\n<p>트리거와 애니메이션을 사용하여 인터랙티브하고 생동감 있는 UI를 만들 수 있다.</p>\n<ul>\n<li><strong>Property Triggers</strong></li>\n<li><strong>Event Triggers</strong></li>\n<li><strong>Data Triggers</strong></li>\n<li><strong>스토리보드(Storyboard)와 애니메이션</strong></li>\n</ul>\n<p><strong>예제</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Hover Me<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button.Triggers</span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Trigger</span> <span class=\"token attr-name\">Property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>IsMouseOver<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>True<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Setter</span> <span class=\"token attr-name\">Property</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Background<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Yellow<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Trigger</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Button.Triggers</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"9-명령command\" style=\"position:relative;\"><a href=\"#9-%EB%AA%85%EB%A0%B9command\" aria-label=\"9 명령command permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. 명령(Command)</h2>\n<p>명령은 WPF에서 버튼 클릭과 같은 사용자 인터페이스 액션을 처리하는 방법이다. 명령 패턴을 사용하면 코드를 더 모듈화하고 재사용 가능하게 만들 수 있다.</p>\n<ul>\n<li><strong>ICommand 인터페이스</strong></li>\n<li><strong>RoutedCommand와 RoutedUICommand</strong></li>\n<li><strong>커맨드 바인딩 (Command Binding)</strong></li>\n</ul>\n<p><strong>예제</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyCommand</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ICommand</span></span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">CanExecute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> parameter<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Execute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> parameter<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Command Executed!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">event</span> <span class=\"token class-name\">EventHandler</span> CanExecuteChanged<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Execute Command<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Command</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{Binding MyCommand}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n<h2 id=\"10-사용자-정의-컨트롤-user-control과-커스텀-컨트롤-custom-control\" style=\"position:relative;\"><a href=\"#10-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%EC%BB%A8%ED%8A%B8%EB%A1%A4-user-control%EA%B3%BC-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BB%A8%ED%8A%B8%EB%A1%A4-custom-control\" aria-label=\"10 사용자 정의 컨트롤 user control과 커스텀 컨트롤 custom control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. 사용자 정의 컨트롤 (User Control)과 커스텀 컨트롤 (Custom Control)</h2>\n<p>복잡한 UI 요소를 재사용 가능한 사용자 정의 컨트롤로 분리하여 개발할 수 있다.</p>\n<ul>\n<li><strong>UserControl</strong></li>\n<li><strong>CustomControl</strong></li>\n<li><strong>템플릿 바인딩 (Template Binding)</strong></li>\n</ul>\n<p><strong>예제</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>UserControl</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>WpfApp.MyUserControl<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TextBlock</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Hello, User Control!<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>UserControl</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"요약\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h2>\n<p>아주 간단하게 말해서 XAML 파일에서 프론트엔드 부분을 구현하고\r\nCS 파일에서 백엔드 로직을 구현하는 식의 구조를 가지고 있다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-xaml\">1. XAML</a></p>\n</li>\n<li>\n<p><a href=\"#2-%EC%BD%94%EB%93%9C-%EB%B9%84%ED%95%98%EC%9D%B8%EB%93%9C\">2. 코드 비하인드</a></p>\n</li>\n<li>\n<p><a href=\"#3-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83\">3. 레이아웃</a></p>\n<ul>\n<li><a href=\"#%EA%B7%B8%EB%A6%AC%EB%93%9C-%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95\">그리드 기본 사용법</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#4-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9\">4. 데이터 바인딩</a></p>\n</li>\n<li>\n<p><a href=\"#5-%EC%8A%A4%ED%83%80%EC%9D%BC%EA%B3%BC-%ED%85%9C%ED%94%8C%EB%A6%BF\">5. 스타일과 템플릿</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#6-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%B2%98%EB%A6%AC\">6. 이벤트 처리</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#7-%EB%A6%AC%EC%86%8C%EC%8A%A4resource%EC%99%80-%EC%8A%A4%ED%83%80%EC%9D%BCstyle\">7. 리소스(Resource)와 스타일(Style)</a></p>\n</li>\n<li>\n<p><a href=\"#8-%ED%8A%B8%EB%A6%AC%EA%B1%B0trigger%EC%99%80-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98animation\">8. 트리거(Trigger)와 애니메이션(Animation)</a></p>\n</li>\n<li>\n<p><a href=\"#9-%EB%AA%85%EB%A0%B9command\">9. 명령(Command)</a></p>\n</li>\n<li>\n<p><a href=\"#10-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%A0%95%EC%9D%98-%EC%BB%A8%ED%8A%B8%EB%A1%A4-user-control%EA%B3%BC-%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%BB%A8%ED%8A%B8%EB%A1%A4-custom-control\">10. 사용자 정의 컨트롤 (User Control)과 커스텀 컨트롤 (Custom Control)</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9A%94%EC%95%BD\">요약</a></p>\n</li>\n</ul>\n</div>","excerpt":"1. XAML **XAML (Extensible Application Markup Language)**은 WPF에서 UI를 정의하는 데 사용되는 XML 기반 언어이다. XAML을 사용하면 UI를 선언적으로 정의할 수 있다. 이 예제는 간단한 윈도우와 버튼을 정의하는 XAML 코드이다. 2. 코드 비하인드 XAML과 연결된 C# 코드를 코드 비하인드라고 한다. 이는 XAML로 정의된 UI 요소에 대한 이벤트 핸들러 및 기타 논리를 포함한다. 3. 레이아웃 WPF XAML은 다양한 레이아웃 컨테이너를 제공하여 UI 요소를 배치할 수 있다.\r\n주요 레이아웃 컨테이너는 다음과 같다 : Grid: 행과 열로 구성된 격자 레이아웃 StackPanel: 수직 또는 수평으로 요소를 쌓는 레이아웃 DockPanel: 요소를 도킹하여 배치하는 레이아웃 Canvas: 절대 위치를 사용하여 요소를 배치하는 레이아웃 그리드 기본 사용법 그리드는 Grid.RowDefinitions와 Grid.ColumnD…","frontmatter":{"date":"June 08, 2024","title":"WPF XAML과 코드비하인드(CS) 구조 이해","categories":"WPF","author":"심우진","emoji":"📘"},"fields":{"slug":"/wpf_02/"}},"next":{"id":"e02bdb47-3dbb-59ff-b662-0a2e7a86cd01","html":"<h2 id=\"wpf-프로젝트의-디렉토리-구조\" style=\"position:relative;\"><a href=\"#wpf-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%9D%98-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC-%EA%B5%AC%EC%A1%B0\" aria-label=\"wpf 프로젝트의 디렉토리 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WPF 프로젝트의 디렉토리 구조</h2>\n<h3 id=\"솔루션-파일-sln\" style=\"position:relative;\"><a href=\"#%EC%86%94%EB%A3%A8%EC%85%98-%ED%8C%8C%EC%9D%BC-sln\" aria-label=\"솔루션 파일 sln permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>솔루션 파일 (.sln)</h3>\n<p>솔루션 파일(.sln)은 Visual Studio 솔루션의 구성 요소를 정의하는 파일로 디렉토리 최상위에 있다. 이 파일은 하나 이상의 프로젝트를 포함할 수 있으며, 개발자가 프로젝트를 열고 빌드하는 데 중요한 역할을 한다.</p>\n<h3 id=\"프로젝트-파일-csproj\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%ED%8C%8C%EC%9D%BC-csproj\" aria-label=\"프로젝트 파일 csproj permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 파일 (.csproj)</h3>\n<p>프로젝트 파일(.csproj)은 C# 프로젝트의 설정을 정의하는 파일이다. 이 파일에는 프로젝트의 빌드 구성, 참조하는 라이브러리, 컴파일할 소스 파일 목록 등이 포함된다. 프로젝트 파일은 프로젝트의 빌드와 배포를 관리하며, 다양한 설정을 통해 프로젝트의 동작을 정의할 수 있다.</p>\n<ul>\n<li><strong>Properties</strong>: 프로젝트의 속성을 포함하며, 주로 <code class=\"language-text\">AssemblyInfo.cs</code> 파일이 위치한다. 이 파일은 어셈블리의 메타데이터를 정의하며, 빌드와 배포 시 중요한 역할을 한다.</li>\n<li><strong>References</strong>: 프로젝트에서 참조하는 외부 라이브러리나 어셈블리들. 프로젝트가 의존하는 외부 코드나 프레임워크를 관리한다.</li>\n<li><strong>App.xaml</strong>: 응용 프로그램의 리소스, 스타일, 테마 등을 정의하는 파일. 애플리케이션의 전반적인 설정과 리소스를 관리하며, 공통 스타일과 리소스를 정의한다.</li>\n<li><strong>MainWindow.xaml</strong>: 기본적으로 생성되는 주 윈도우 파일. 사용자 인터페이스의 메인 엔트리 포인트가 된다.</li>\n<li><strong>MainWindow.xaml.cs</strong>: <code class=\"language-text\">MainWindow.xaml</code>의 코드 비하인드 파일. 이벤트 핸들러와 로직이 구현된다.</li>\n</ul>\n<p>이 기본 구조를 바탕으로, 프로젝트의 복잡성에 따라 폴더와 파일을 추가하여 조직화할 수 있다.</p>\n<h2 id=\"mvvm-패턴일-경우-디렉토리-구성\" style=\"position:relative;\"><a href=\"#mvvm-%ED%8C%A8%ED%84%B4%EC%9D%BC-%EA%B2%BD%EC%9A%B0-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC-%EA%B5%AC%EC%84%B1\" aria-label=\"mvvm 패턴일 경우 디렉토리 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MVVM 패턴일 경우 디렉토리 구성</h2>\n<p>MVVM (Model-View-ViewModel) 패턴은 WPF 애플리케이션에서 가장 널리 사용되는 디자인 패턴이다.</p>\n<ul>\n<li><strong>Model</strong>: 데이터와 비즈니스 로직을 포함하는 클래스들이 위치하는 폴더. 이 폴더에는 데이터베이스 모델, 비즈니스 엔티티, 데이터 접근 로직이 포함된다.</li>\n<li><strong>View</strong>: 사용자 인터페이스 요소를 포함하는 XAML 파일들이 위치하는 폴더. 이 폴더에는 화면을 구성하는 XAML 파일과 그 코드 비하인드 파일이 포함된다.</li>\n<li><strong>ViewModel</strong>: 뷰와 모델 사이의 중개자 역할을 하는 클래스들이 위치하는 폴더. 뷰 모델은 데이터 바인딩과 커맨드를 처리하며, 뷰와 모델 간의 로직을 관리한다.</li>\n</ul>\n<h3 id=\"간단한-예시\" style=\"position:relative;\"><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%98%88%EC%8B%9C\" aria-label=\"간단한 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>간단한 예시</h3>\n<p>다음은 MVVM 패턴을 적용한 WPF 프로젝트의 디렉토리 구조 예시이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">MyWpfApp.sin\r\n\r\nMyWpfApp/\r\n├── Model/\r\n│   ├── Customer.cs\r\n│   └── Order.cs\r\n├── View/\r\n│   ├── MainWindow.xaml\r\n│   └── CustomerView.xaml\r\n├── ViewModel/\r\n│   ├── MainViewModel.cs\r\n│   └── CustomerViewModel.cs\r\n├── App.xaml\r\n├── App.xaml.cs\r\n└── MyWpfApp.csproj</code></pre></div>\n<h3 id=\"새로운-클래스cs-파일과-xaml-파일-배치-기준\" style=\"position:relative;\"><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%ED%81%B4%EB%9E%98%EC%8A%A4cs-%ED%8C%8C%EC%9D%BC%EA%B3%BC-xaml-%ED%8C%8C%EC%9D%BC-%EB%B0%B0%EC%B9%98-%EA%B8%B0%EC%A4%80\" aria-label=\"새로운 클래스cs 파일과 xaml 파일 배치 기준 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>새로운 클래스(.cs) 파일과 XAML 파일 배치 기준</h3>\n<p>새로운 클래스(.cs) 파일과 XAML 파일을 배치할 때의 기준은 다음과 같다.</p>\n<ul>\n<li>\n<p><strong>Model 클래스</strong>: 데이터와 비즈니스 로직을 포함하는 클래스는 <code class=\"language-text\">Model</code> 폴더에 배치한다. 예를 들어, 고객 데이터를 처리하는 <code class=\"language-text\">Customer.cs</code> 파일은 <code class=\"language-text\">Model</code> 폴더에 위치시킨다. 이는 비즈니스 로직과 데이터 구조가 독립적으로 관리되도록 한다.</p>\n</li>\n<li>\n<p><strong>View 클래스</strong>: 사용자 인터페이스 요소를 포함하는 XAML 파일은 <code class=\"language-text\">View</code> 폴더에 배치한다. 예를 들어, 고객 정보를 표시하는 <code class=\"language-text\">CustomerView.xaml</code> 파일은 <code class=\"language-text\">View</code> 폴더에 위치시킨다. 이는 UI 요소가 논리적으로 분리되어 관리되도록 한다.</p>\n</li>\n<li>\n<p><strong>ViewModel 클래스</strong>: 뷰와 모델 사이의 중개자 역할을 하는 클래스는 <code class=\"language-text\">ViewModel</code> 폴더에 배치한다. 예를 들어, <code class=\"language-text\">CustomerView.xaml</code>과 연결된 로직을 처리하는 <code class=\"language-text\">CustomerViewModel.cs</code> 파일은 <code class=\"language-text\">ViewModel</code> 폴더에 위치시킨다. 이는 프레젠테이션 로직과 UI 로직이 독립적으로 관리되도록 한다.</p>\n</li>\n</ul>\n<p>이러한 디렉토리 구조를 유지함으로써 코드의 가독성과 유지보수성을 높일 수 있으며, 각 계층 간의 역할이 명확하게 분리되어 협업 시에도 효율적으로 작업할 수 있다. 또한, 각 컴포넌트의 테스트 용이성을 높여, 전체 시스템의 안정성을 향상시킬 수 있다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#wpf-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%9D%98-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC-%EA%B5%AC%EC%A1%B0\">WPF 프로젝트의 디렉토리 구조</a></p>\n<ul>\n<li><a href=\"#%EC%86%94%EB%A3%A8%EC%85%98-%ED%8C%8C%EC%9D%BC-sln\">솔루션 파일 (.sln)</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%ED%8C%8C%EC%9D%BC-csproj\">프로젝트 파일 (.csproj)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#mvvm-%ED%8C%A8%ED%84%B4%EC%9D%BC-%EA%B2%BD%EC%9A%B0-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC-%EA%B5%AC%EC%84%B1\">MVVM 패턴일 경우 디렉토리 구성</a></p>\n<ul>\n<li><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%98%88%EC%8B%9C\">간단한 예시</a></li>\n<li><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%ED%81%B4%EB%9E%98%EC%8A%A4cs-%ED%8C%8C%EC%9D%BC%EA%B3%BC-xaml-%ED%8C%8C%EC%9D%BC-%EB%B0%B0%EC%B9%98-%EA%B8%B0%EC%A4%80\">새로운 클래스(.cs) 파일과 XAML 파일 배치 기준</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 07, 2024","title":"WPF의 디렉토리 구조 및 MVVM 패턴","categories":"WPF","author":"심우진","emoji":"📁"},"fields":{"slug":"/wpf_01/"}},"prev":{"id":"dcadef89-05f4-5938-94e7-9ce6976f43a0","html":"<h2 id=\"데이터바인딩\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"데이터바인딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터바인딩</h2>\n<p>데이터바인딩(Data Binding)은 사용자 인터페이스(UI) 요소와 데이터 소스 간의 연결을 설정하여, 데이터가 자동으로 동기화되도록 하는 기술이다. 이를 통해 데이터 소스의 변경이 UI에 즉시 반영되며, UI를 통해 변경된 데이터가 데이터 소스에도 즉시 반영된다.</p>\n<p>주로 WPF에서 데이터바인딩을 활용하게 된다.</p>\n<h2 id=\"데이터바인딩의-주요-구성-요소\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B0%94%EC%9D%B8%EB%94%A9%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C\" aria-label=\"데이터바인딩의 주요 구성 요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터바인딩의 주요 구성 요소</h2>\n<ol>\n<li><strong>데이터 소스(Data Source)</strong>: 바인딩할 실제 데이터이다. 이는 객체, 컬렉션, 데이터베이스 등일 수 있다.</li>\n<li><strong>바인딩 타겟(Binding Target)</strong>: 데이터를 표시할 UI 요소이다. 예를 들어 텍스트 박스, 레이블 등이 있다.</li>\n<li><strong>바인딩 객체(Binding Object)</strong>: 데이터 소스와 바인딩 타겟 간의 연결을 설정하는 객체이다.</li>\n</ol>\n<h2 id=\"데이터바인딩의-활용\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B0%94%EC%9D%B8%EB%94%A9%EC%9D%98-%ED%99%9C%EC%9A%A9\" aria-label=\"데이터바인딩의 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터바인딩의 활용</h2>\n<p>일반적으로 소스는 데이터(ViewModel)이고 타겟은 컨트롤이다. 모든 바인딩에는 소스 객체, 소스 속성, 타겟 객체 및 타겟 속성이 있다. 소스 객체는 Binding Source속성 또는 ViewModel 클래스인 경우 DataContext 속성으로 지정하면 됩니다.</p>\n<p>데이터 바인딩은 이벤트 핸들러를 대체할 수 있는데 이는 C# 코드를 줄이는 역할을 합니다. XAML에서 정의된 데이터 바인딩은 C# 코드 비하인드 파일에서 이벤트 핸들러를 정의할 필요가 없다.</p>\n<h2 id=\"예제-1-간단한-데이터바인딩\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-1-%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"예제 1 간단한 데이터바인딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 1: 간단한 데이터바인딩</h2>\n<p>다음은 텍스트 박스와 데이터 소스 간의 간단한 데이터바인딩 예제이다.</p>\n<p><strong>MainWindow.xaml</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Window</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DataBindingExample.MainWindow<span class=\"token punctuation\">\"</span></span>\r\n        <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2006/xaml/presentation<span class=\"token punctuation\">\"</span></span>\r\n        <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2006/xaml<span class=\"token punctuation\">\"</span></span>\r\n        <span class=\"token attr-name\">Title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Data Binding Example<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>400<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token comment\">&lt;!-- TextBox의 Text 속성을 Person 객체의 Name 속성과 바인딩 --></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TextBox</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{Binding Name, UpdateSourceTrigger=PropertyChanged}<span class=\"token punctuation\">\"</span></span> \r\n                 <span class=\"token attr-name\">VerticalAlignment</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">HorizontalAlignment</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Window</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>XAML의 바인딩은 DataContext로 설정된 객체의 속성을 참조하기 때문에 Binding Person이라고 하면 동작하지 않는다.</p>\n<p>DataContext가 Person 객체로 설정되어 있고, Person 객체의 Name 속성과 바인딩해야 한다.</p>\n<p>UpdateSourceTrigger=PropertyChanged 속성은 Name 속성이 변경될 때마다 TextBox의 내용이 업데이트됨을 의미한다.</p>\n<p><strong>MainWindow.xaml.cs</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Windows</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">DataBindingExample</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Window</span></span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Person</span> Person <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">public</span> <span class=\"token function\">MainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// XAML을 로드하고 초기화</span>\r\n            Person <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Person</span> <span class=\"token punctuation\">{</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"홍길동\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Person 객체 생성 및 초기화</span>\r\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>DataContext <span class=\"token operator\">=</span> Person<span class=\"token punctuation\">;</span> <span class=\"token comment\">// DataContext를 Person 객체로 설정</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Person 객체를 생성하고 Name 속성을 “홍길동”으로 초기화한다.</p>\n<p>MainWindow의 DataContext를 Person 객체로 설정한다. 이는 XAML에서 바인딩된 모든 요소들이 이 Person 객체를 데이터 소스로 사용함을 의미한다.</p>\n<h2 id=\"예제-2-컬렉션-데이터바인딩\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%A0%9C-2-%EC%BB%AC%EB%A0%89%EC%85%98-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"예제 2 컬렉션 데이터바인딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예제 2: 컬렉션 데이터바인딩</h2>\n<p>다음은 리스트박스와 컬렉션 간의 데이터바인딩 예제이다.</p>\n<p><strong>MainWindow.xaml</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Window</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DataBindingExample.MainWindow<span class=\"token punctuation\">\"</span></span>\r\n        <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2006/xaml/presentation<span class=\"token punctuation\">\"</span></span>\r\n        <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2006/xaml<span class=\"token punctuation\">\"</span></span>\r\n        <span class=\"token attr-name\">Title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Data Binding Example<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>400<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span><span class=\"token punctuation\">></span></span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListBox</span> <span class=\"token attr-name\">ItemsSource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{Binding People}<span class=\"token punctuation\">\"</span></span> \r\n                 <span class=\"token attr-name\">DisplayMemberPath</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Name<span class=\"token punctuation\">\"</span></span> \r\n                 <span class=\"token attr-name\">HorizontalAlignment</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">VerticalAlignment</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Window</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><strong>MainWindow.xaml.cs</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>ObjectModel</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Windows</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">DataBindingExample</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainWindow</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">Window</span></span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">ObservableCollection<span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">></span></span> People <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token keyword\">public</span> <span class=\"token function\">MainWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            People <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> ObservableCollection<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span> <span class=\"token comment\">// ObservableCollection 객체 초기화 및 요소 추가</span>\r\n            <span class=\"token punctuation\">{</span>\r\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Person</span> <span class=\"token punctuation\">{</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"홍길동\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Person</span> <span class=\"token punctuation\">{</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"김철수\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n                <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Person</span> <span class=\"token punctuation\">{</span> Name <span class=\"token operator\">=</span> <span class=\"token string\">\"이영희\"</span> <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>DataContext <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// DataContext를 MainWindow 자신으로 설정</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// 바인딩할 속성 정의</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"동작-순서-및-원리\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%9E%91-%EC%88%9C%EC%84%9C-%EB%B0%8F-%EC%9B%90%EB%A6%AC\" aria-label=\"동작 순서 및 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동작 순서 및 원리</h3>\n<p>XAML 로드 및 초기화:</p>\n<ul>\n<li>MainWindow 클래스의 생성자에서 InitializeComponent 메서드를 호출하여 XAML 파일을 로드하고 초기화한다.</li>\n</ul>\n<p>데이터 컬렉션 생성:</p>\n<ul>\n<li>ObservableCollection 객체를 생성하고 초기화한다.</li>\n<li>ObservableCollection은 컬렉션의 변경사항이 자동으로 UI에 반영되도록 한다.</li>\n</ul>\n<p>DataContext 설정:</p>\n<ul>\n<li>MainWindow의 DataContext를 this로 설정한다.</li>\n<li>이는 MainWindow 클래스의 모든 속성들이 데이터 바인딩에 사용될 수 있음을 의미한다.</li>\n</ul>\n<p>데이터바인딩 설정:</p>\n<ul>\n<li>XAML에서 ListBox의 ItemsSource 속성이 People 컬렉션과 바인딩된다.</li>\n<li>DisplayMemberPath를 Name으로 설정하여, ListBox가 Person 객체의 Name 속성을 표시하도록 한다.</li>\n</ul>\n<p>컬렉션 변경사항 반영:</p>\n<ul>\n<li>ObservableCollection은 컬렉션의 요소가 추가되거나 제거될 때 자동으로 UI에 반영된다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B0%94%EC%9D%B8%EB%94%A9\">데이터바인딩</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B0%94%EC%9D%B8%EB%94%A9%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C\">데이터바인딩의 주요 구성 요소</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B0%94%EC%9D%B8%EB%94%A9%EC%9D%98-%ED%99%9C%EC%9A%A9\">데이터바인딩의 활용</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%98%88%EC%A0%9C-1-%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B0%94%EC%9D%B8%EB%94%A9\">예제 1: 간단한 데이터바인딩</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%98%88%EC%A0%9C-2-%EC%BB%AC%EB%A0%89%EC%85%98-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B0%94%EC%9D%B8%EB%94%A9\">예제 2: 컬렉션 데이터바인딩</a></p>\n<ul>\n<li><a href=\"#%EB%8F%99%EC%9E%91-%EC%88%9C%EC%84%9C-%EB%B0%8F-%EC%9B%90%EB%A6%AC\">동작 순서 및 원리</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 09, 2024","title":"WPF 데이터바인딩 더 알아보기","categories":"WPF","author":"심우진","emoji":"📊"},"fields":{"slug":"/wpf_03/"}},"site":{"siteMetadata":{"siteUrl":"https://woogooree.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/wpf_02/","nextSlug":"/wpf_01/","prevSlug":"/wpf_03/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}